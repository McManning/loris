# Generated by compile.py at 2015-07-11 01:39:53.093381

# YAML API spec of the ORIS API
# Using Swagger Spec 2.0: https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md
# Compiled for use in Swagger Editor: http://editor.swagger.io/#/
swagger: '2.0'
info:
  title: Office of Research API
  description: |
    API interface for [The Ohio State University](http://osu.edu) research data.

    Built for use by the [Office of Research](http://research.osu.edu).

    Utilizing [swagger.io specifications](http://swagger.io/specification) and a
    custom serverside renderer styled loosely around Swagger Editor.
  version: "1.0.0"
  contact:
    name: Chase McManning
    url: http://research.osu.edu
    email: mcmanning.1@osu.edu
host: orapps.osu.edu
schemes:
  - https
basePath: /api/v1
produces:
  - application/json

endpoints:

  # spec/paths\Award Paths.yaml
  Award:
    title: Award
    description: Award stuff
    routes:
      /award:
        get:
          summary: "Search for an Award and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}:
        get:
          summary: Retrieve a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/departments:
        get:
          summary: Retrieve Departments associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.DepartmentCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/projects:
        get:
          summary: Retrieve projects associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.InvestigatorCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Sponsor"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/attributes:
        get:
          summary: Retrieve additional attributes for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Attributes"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/information:
        get:
          summary: Retrieve additional information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Information"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/terms:
        get:
          summary: Retrieve a list of terms for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Terms"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/payments:
        get:
          summary: Retrieve additional payment information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Payments"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/funding:
        get:
          summary: Retrieve additional funding details for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Funding"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/history:
        get:
          summary: Retrieve amendments for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.History"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/milestones:
        get:
          summary: Retrieve milestone reports for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Milestones"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
     
  # spec/paths\College Paths.yaml
  College:
    title: College
    description: College stuff
    routes:
      /college:
        get:
          summary: |
            Search for a College resource, or 
            retrieve a collection of all Colleges.
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: false
              type: string
            - in: query
              name: expand
              description: Object expansion notation for meta child objects
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}:
        get:
          summary: Return a College resource by ID.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/College"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProposalCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/departments:
        get:
          summary: Retrieve a collection of Departments associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/DepartmentCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Department Paths.yaml
  Department:
    title: Department
    description: Department stuff
    routes:
      /department:
        get:
          summary: |
            Search for a Department resource, or 
            retrieve a collection of all Departments.
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: false
              type: string
            - in: query
              name: expand
              description: Object expansion notation for meta child objects
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/DepartmentCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}:
        get:
          summary: Return a Department resource by ID.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Department"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProjectCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProposalCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/investigators:
        get:
          summary: |
            Retrieve a collection of investigators (Persons) 
            associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/PersonCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Fom Paths.yaml
  FOM:
    title: FOM
    description: FOM stuff
    routes:
      /fom/project/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of projects with the specified Principal Investigators, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getProjByInv, and 
            currently only in use by the FOM vendor software.
          parameters:
            - in: path
              name: list
              description: Comma separated list of EITHER ResIDs or NameNs (but not mixed)
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.Projects"
      /fom/projectpi/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of PI data for the requested projects, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getPIByProject, and 
            currently only in use by the FOM vendor software.
            
            Potentially equivalent to the new API:
            ```
              /api/v1/project?q=(project ID list)&expand=principalInvestigator
            ```
          parameters:
            - in: path
              name: list
              description: Comma separated list of project IDs.
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.ProjectPis"
      /fom/departments:
        get:
          deprecated: true
          summary: "Returns a collection of all known departments, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getDeptList, with 
            a local JSON cache for quicker retrieval (24 hour).
            Currently only in use by the FOM vendor software.
            
            Potentially equivalent to the new API:
            ```
              /api/v1/department
            ```
          parameters:
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.Departments"

  # spec/paths\FundOps Paths.yaml
  FundOps:
    title: FundOps
    description: FundOps stuff
    routes:
      /fundops:
        get:
          summary: Returns a list of current Funding Opportunities.
          description: |
            This is a wrapper around USP\_FundOps\_UnivDev.
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/FundingOpportunities"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Legacy Paths.yaml
  Legacy:
    title: Legacy
    description: Legacy stuff
    routes:
      /legacy/training/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of training data for the requested users, in either JSON or XML format."
          description: |
            This is currently a wrapper around OR_Training::createFrom(NameN|ResID)List 
            methods and in use by eProtocol. 

            Potentially equivalent to the new API: 
            ```
              /api/v1/person?q=(namen|resid list)&expand=training
            ```
            or
            ```
              /api/v1/person/training?q=(namen|resid list)
            ```
          parameters:
            - in: path
              name: list
              description: Comma separated list of EITHER ResIDs or NameNs (but not mixed)
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Legacy.UserTraining"

  # spec/paths\Person Paths.yaml
  Person:
    title: Person
    description: Person stuff
    routes:
      /person:
        get:
          summary: "Search for a person by any attributes (ResID, first name, last name, name.n, etc)"
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: true
              type: string
            - in: query
              name: inactive
              description: |
                Inactive flag, if true, inactive users will 
                be included in the results collection.
              required: false
              type: boolean
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/PersonCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}:
        get:
          summary: Return a Person resource by ResID.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Person"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        put:
          summary: Update an existing person
          description: ""
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          parameters:
            - in: path
              name: resId
              description: ResID of the Person to update
              required: true
              type: string
            - in: body
              name: body
              description: Updated person object
              required: false
              schema:
                $ref: "#/definitions/Person"
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: '#/definitions/Person'
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProjectCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/AwardCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProposalCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/certificates:
        get:
          summary: |
            Retrieve Certificates/Training 
            associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/Certificates"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
       
  # spec/paths\Project Paths.yaml
  Project:
    title: Project
    description: Project stuff
    routes:
      /project:
        get:
          summary: "Search for a Project and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}:
        get:
          summary: Retrieve a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/departments:
        get:
          summary: Retrieve Departments associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.DepartmentCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.InvestigatorCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Sponsor"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/information:
        get:
          summary: Retrieve additional information for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Information"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/terms:
        get:
          summary: |
            Retrieve a list of terms for a specific Project.
            While these are usually the same as Award terms,
            sometimes they are not. 
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Terms"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/reports:
        get:
          summary: Retrieve reports for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.ReportCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/expenditures:
        get:
          summary: Retrieve expenditure data for a specific Project.
          description: |
            If a date range is specified, it will only show expenditures
            for that range. If not, this will retrieve all expenditures
            throughout the life of the Project.
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
            - in: query
              name: start
              description: Requested start date for expenditures data
              type: string
              format: date
            - in: query
              name: end
              description: Requested end date for expenditures data
              type: string
              format: date
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Expenditures"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/commitments:
        get:
          summary: Retrieve current commitment data for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Commitments"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/financials:
        get:
          summary: Retrieve additional financial data for a specific Project.
          description: |
            If the As Of date is specified, it will only report financial data
            up to the specified date. Otherwise, it will report the most recent data.
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
            - in: query
              name: asOf
              description: Requested As Of (up to) date for financial data.
              type: string
              format: date
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Financials"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/acl/{resId}:
        get:
          tags:
            - draft
          summary: |
            Retrieve project-specific ACL roles 
            for the specified Person.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Acl"
            "404":
              description: |
                Project not found or Person does not 
                have existing project ACLs.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        post:
          tags:
            - draft
          summary: Set (replace) ACLs of a Person for a Project.
          description: ""
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
            - in: body
              name: body
              description: Updated ACLs for a Person
              required: false
              schema:
                $ref: "#/definitions/Project.Acl"
          responses:
            "201":
              description: Created
              schema:
                $ref: '#/definitions/Project.Acl'
            "404":
              description: Project or Person not found.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        delete:
          tags:
            - draft
          summary: |
            Delete all project-specific ACL roles 
            for the specified Person.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
            "404":
              description: |
                Project not found or Person does not 
                have existing project ACLs.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/acl:
        get:
          tags:
            - draft
          summary: |
            Retrieve a collection of all ACLs and 
            Persons defined for a Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.AclCollection"
            "404":
              description: Project not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"

  # spec/paths\Proposal Paths.yaml
  Proposal:
    title: Proposal
    description: Proposal stuff
    routes:
      /proposal:
        get:
          summary: "Search for a Proposal and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProposalCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}:
        get:
          summary: Retrieve a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/departments:
        get:
          summary: Retrieve Departments and allocation associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.DepartmentCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/projects:
        get:
          summary: Retrieve projects associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.InvestigatorCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.Sponsor"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/funding:
        get:
          summary: Retrieve additional funding details for a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.Funding"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Test Paths.yaml
  Test:
    title: Test
    description: |
      Endpoint description. **Markdown** is supported. 
    routes:
      /test:
        get:
          deprecated: true
          tags:
            - Foo
            - Bar
            - Test
          summary: Test path for checking doc generating of various features
          description: |
            This *example* uses **markdown** for the __description__. 
            > Here is 
            > a block quote

            * And a undordered list 
            * of some content

            1. bananas
            2. apples

              Presumably this is a code block?
              (because of indentation...) ... maybe?

            [example link](http://example.com "Example title")
            And here is some `<strong>inline code</strong>` if you feel so inclined.
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Test"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        post:
          deprecated: true
          tags:
            - Test
          summary: Test POST documentation
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          x-acl:
            - oris
            - test_group
            - college_admin_40000
          parameters:
            - in: body
              name: body
              description: Message body
              required: false
              schema:
                type: string
          responses:
            "201":
              description: Created
              schema:
                $ref: '#/definitions/Test'
            "404":
              description: Test not available
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"
        put:
          deprecated: true
          tags:
            - Test
          summary: Test PUT documentation
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          x-acl:
            - oris
            - test_group
          parameters:
            - in: body
              name: body
              description: Message body
              required: false
              schema:
                type: string
          responses:
            "200":
              description: Resource Updated
              schema:
                $ref: '#/definitions/Test'
            "404":
              description: Test not available
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"
        delete:
          deprecated: true
          tags:
            - Test
          summary: Test DELETE documentation
          x-acl:
            - oris
          responses:
            "200":
              description: Successful deletion
            "404":
              description: Test not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"

definitions:

  # spec/definitions\Error Definitions.yaml
  ErrorResponse:
    required:
      - responseCode
      - message
      - developerMessage
    properties:
      responseCode:
        type: integer
        format: int32
        example: 400
      message:
        type: string
        description: A user friendly error message that could potentially be reflected back in an application. 
        example: Person not found
      developerMessage:
        type: string
        description: An error string oriented toward helping developers debug consumer code.
        example: Requested resource identifier (ResID) does not exist.

  # spec/definitions\Legacy Definitions.yaml
  Legacy.UserTraining:
    description: Collection of users with training data.
    properties:
      user:
        type: array
        items:
          type: object
          description: Training information for a single user.
          properties:
            resid:
              type: string
            namen:
              type: string
            certificate:
              type: array
              items:
                type: object
                description: A single certificate or training status. 
                properties:
                  id:
                    type: string
                    description: "Type of certificate (e.g. COI, PIE, CITI)"
                  name:
                    type: string
                    description: "Longer type string (e.g. Conflict of Interest)"
                  dateReceived:
                    type: string
                    description: "mm/dd/YYYY of when the certificate was received, or null if not applicable."
                  dateExpired:
                    type: string
                    description: "mm/dd/YYYY of when the certificate expires, or null if not applicable."
                  status:
                    type: string
                    description: "Status string for a certificate (e.g. Incomplete)"
                  comments:
                    type: string
                    description: "Additional comments attached to a certificate."
                  companies:
                    type: array
                    description: "COI specific field. List of companies entered on a user's COI."
                    items:
                      type: string

  # spec/definitions\Test Definitions.yaml
  Test:
    description: |
      Just a definition to test documenting of various features.
      E.g. JSON schema attributes, Markdown, whatever.
    properties:
      meta:
        $ref: "#/definitions/Meta"
      arrayOfObjects:
        type: array
        description: Testing an array of objects
        items:
          type: object
          description: Description of an object
          properties:
            foo:
              type: number
              description: Number of foos present
            bar:
              type: string
              description: Description of bar
      arrayOfArrays:
        type: array
        description: Testing an array of arrays
        items:
          type: array
          description: A nested array of strings
          items:
            type: string
      arrayOfRef:
        type: array
        description: Testing an array of $ref
        items:
          $ref: "#/definitions/Test"
      arrayOfStrings:
        type: array
        description: Testing an array of primitive strings
        items:
          type: string