# Generated by compile.py at 2015-07-12 16:41:48.556803

# YAML API spec of the ORIS API
# Using Swagger Spec 2.0: https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md
# Compiled for use in Swagger Editor: http://editor.swagger.io/#/
swagger: '2.0'
info:
  title: Office of Research API
  description: |
    API interface for [The Ohio State University](http://osu.edu) research data.

    Built for use by the [Office of Research](http://research.osu.edu).

    Utilizing [swagger.io specifications](http://swagger.io/specification) and a
    custom serverside renderer styled loosely around Swagger Editor.
  version: "1.0.0"
  contact:
    name: Chase McManning
    url: http://research.osu.edu
    email: mcmanning.1@osu.edu
host: orapps.osu.edu
schemes:
  - https
basePath: /api/v1
produces:
  - application/json

endpoints:

  # spec/paths\Award Paths.yaml
  Award:
    title: Award
    description: Award stuff
    routes:
      /award:
        get:
          summary: "Search for an Award and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}:
        get:
          summary: Retrieve a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/departments:
        get:
          summary: Retrieve Departments associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.DepartmentCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/projects:
        get:
          summary: Retrieve projects associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.InvestigatorCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Sponsor"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/attributes:
        get:
          summary: Retrieve additional attributes for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Attributes"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/information:
        get:
          summary: Retrieve additional information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Information"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/terms:
        get:
          summary: Retrieve a list of terms for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Terms"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/payments:
        get:
          summary: Retrieve additional payment information for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Payments"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/funding:
        get:
          summary: Retrieve additional funding details for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Funding"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/history:
        get:
          summary: Retrieve amendments for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.History"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /award/{id}/milestones:
        get:
          summary: Retrieve milestone reports for a specific Award.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Award, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Award.Milestones"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
     
  # spec/paths\College Paths.yaml
  College:
    title: College
    description: College stuff
    routes:
      /college:
        get:
          summary: |
            Search for a College resource, or 
            retrieve a collection of all Colleges.
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: false
              type: string
            - in: query
              name: expand
              description: Object expansion notation for meta child objects
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}:
        get:
          summary: Return a College resource by ID.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/College"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProposalCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /college/{id}/departments:
        get:
          summary: Retrieve a collection of Departments associated with the College.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique College ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/DepartmentCollection"
            "404":
              description: College not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Department Paths.yaml
  Department:
    title: Department
    description: Department stuff
    routes:
      /department:
        get:
          summary: |
            Search for a Department resource, or 
            retrieve a collection of all Departments.
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: false
              type: string
            - in: query
              name: expand
              description: Object expansion notation for meta child objects
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/DepartmentCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}:
        get:
          summary: Return a Department resource by ID.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Department"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/AwardCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProjectCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProposalCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /department/{id}/investigators:
        get:
          summary: |
            Retrieve a collection of investigators (Persons) 
            associated with the Department.
          description: ""
          parameters:
            - in: path
              name: id
              description: Unique Department ID.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/PersonCollection"
            "404":
              description: Department not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Fom Paths.yaml
  FOM:
    title: FOM
    description: FOM stuff
    routes:
      /fom/project/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of projects with the specified Principal Investigators, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getProjByInv, and 
            currently only in use by the FOM vendor software.
          parameters:
            - in: path
              name: list
              description: Comma separated list of EITHER ResIDs or NameNs (but not mixed)
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.Projects"
      /fom/projectpi/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of PI data for the requested projects, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getPIByProject, and 
            currently only in use by the FOM vendor software.
            
            Potentially equivalent to the new API:
            ```
              /api/v1/project?q=(project ID list)&expand=principalInvestigator
            ```
          parameters:
            - in: path
              name: list
              description: Comma separated list of project IDs.
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.ProjectPis"
      /fom/departments:
        get:
          deprecated: true
          summary: "Returns a collection of all known departments, in either JSON or XML format."
          description: |
            This is a wrapper around USP\_FOM\_getDeptList, with 
            a local JSON cache for quicker retrieval (24 hour).
            Currently only in use by the FOM vendor software.
            
            Potentially equivalent to the new API:
            ```
              /api/v1/department
            ```
          parameters:
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Fom.Departments"

  # spec/paths\FundOps Paths.yaml
  FundOps:
    title: FundOps
    description: FundOps stuff
    routes:
      /fundops:
        get:
          summary: Returns a list of current Funding Opportunities.
          description: |
            This is a wrapper around USP\_FundOps\_UnivDev.
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/FundingOpportunities"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Legacy Paths.yaml
  Legacy:
    title: Legacy
    description: Legacy stuff
    routes:
      /legacy/training/{list}:
        get:
          deprecated: true
          summary: "Returns a collection of training data for the requested users, in either JSON or XML format."
          description: |
            This is currently a wrapper around OR_Training::createFrom(NameN|ResID)List 
            methods and in use by eProtocol. 

            Potentially equivalent to the new API: 
            ```
              /api/v1/person?q=(namen|resid list)&expand=training
            ```
            or
            ```
              /api/v1/person/training?q=(namen|resid list)
            ```
          parameters:
            - in: path
              name: list
              description: Comma separated list of EITHER ResIDs or NameNs (but not mixed)
              required: true
              type: string
            - in: query
              name: json
              description: "If set, the response will be in 'application/json' format"
              required: false
              type: string
          responses:
            "200":
              description: successful operation
              schema:
                $ref: "#/definitions/Legacy.UserTraining"

  # spec/paths\Person Paths.yaml
  Person:
    title: Person
    description: Person stuff
    routes:
      /person:
        get:
          summary: "Search for a person by any attributes (ResID, first name, last name, name.n, etc)"
          description: ""
          parameters:
            - in: query
              name: q
              description: Search terms
              required: true
              type: string
            - in: query
              name: inactive
              description: |
                Inactive flag, if true, inactive users will 
                be included in the results collection.
              required: false
              type: boolean
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/PersonCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}:
        get:
          summary: Return a Person resource by ResID.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Person"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        put:
          summary: Update an existing person
          description: ""
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          parameters:
            - in: path
              name: resId
              description: ResID of the Person to update
              required: true
              type: string
            - in: body
              name: body
              description: Updated person object
              required: false
              schema:
                $ref: "#/definitions/Person"
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: '#/definitions/Person'
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/projects:
        get:
          summary: Retrieve a collection of Projects associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProjectCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/awards:
        get:
          summary: Retrieve a collection of Awards associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/AwardCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/proposals:
        get:
          summary: Retrieve a collection of Proposals associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/ProposalCollection"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /person/{resId}/certificates:
        get:
          summary: |
            Retrieve Certificates/Training 
            associated with the Person.
          description: ""
          parameters:
            - in: path
              name: resId
              description: ResID of the Person resource.
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                  $ref: "#/definitions/Person.Certificates"
            "404":
              description: Person not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
       
  # spec/paths\Project Paths.yaml
  Project:
    title: Project
    description: Project stuff
    routes:
      /project:
        get:
          summary: "Search for a Project and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}:
        get:
          summary: Retrieve a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/departments:
        get:
          summary: Retrieve Departments associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.DepartmentCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.InvestigatorCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Sponsor"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/information:
        get:
          summary: Retrieve additional information for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Information"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/terms:
        get:
          summary: |
            Retrieve a list of terms for a specific Project.
            While these are usually the same as Award terms,
            sometimes they are not. 
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Terms"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/reports:
        get:
          summary: Retrieve reports for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.ReportCollection"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/expenditures:
        get:
          summary: Retrieve expenditure data for a specific Project.
          description: |
            If a date range is specified, it will only show expenditures
            for that range. If not, this will retrieve all expenditures
            throughout the life of the Project.
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
            - in: query
              name: start
              description: Requested start date for expenditures data
              type: string
              format: date
            - in: query
              name: end
              description: Requested end date for expenditures data
              type: string
              format: date
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Expenditures"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/commitments:
        get:
          summary: Retrieve current commitment data for a specific Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Commitments"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/financials:
        get:
          summary: Retrieve additional financial data for a specific Project.
          description: |
            If the As Of date is specified, it will only report financial data
            up to the specified date. Otherwise, it will report the most recent data.
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
            - in: query
              name: asOf
              description: Requested As Of (up to) date for financial data.
              type: string
              format: date
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Financials"
            "404":
              description: Award not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/acl/{resId}:
        get:
          tags:
            - draft
          summary: |
            Retrieve project-specific ACL roles 
            for the specified Person.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.Acl"
            "404":
              description: |
                Project not found or Person does not 
                have existing project ACLs.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        post:
          tags:
            - draft
          summary: Set (replace) ACLs of a Person for a Project.
          description: ""
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
            - in: body
              name: body
              description: Updated ACLs for a Person
              required: false
              schema:
                $ref: "#/definitions/Project.Acl"
          responses:
            "201":
              description: Created
              schema:
                $ref: '#/definitions/Project.Acl'
            "404":
              description: Project or Person not found.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        delete:
          tags:
            - draft
          summary: |
            Delete all project-specific ACL roles 
            for the specified Person.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
            "404":
              description: |
                Project not found or Person does not 
                have existing project ACLs.
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /project/{id}/acl:
        get:
          tags:
            - draft
          summary: |
            Retrieve a collection of all ACLs and 
            Persons defined for a Project.
          description: ""
          parameters:
            - in: path
              name: id
              description: ID of the Project resource (e.g. 60012345).
              required: true
              type: string
            - in: path
              name: resId
              description: ResID of the Person resource (e.g. 200275154).
              required: true
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Project.AclCollection"
            "404":
              description: Project not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"

  # spec/paths\Proposal Paths.yaml
  Proposal:
    title: Proposal
    description: Proposal stuff
    routes:
      /proposal:
        get:
          summary: "Search for a Proposal and return a collection of matches."
          description: |
            TODO: Spec out the list of attributes we can search by. Obviously
            this will include id, title, PI, SPO, sponsor, department, and college.
          parameters:
            - in: query
              name: q
              description: Search query
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProposalCollection"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}:
        get:
          summary: Retrieve a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/departments:
        get:
          summary: Retrieve Departments and allocation associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.DepartmentCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/colleges:
        get:
          summary: Retrieve Colleges associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/CollegeCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/projects:
        get:
          summary: Retrieve projects associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/ProjectCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/investigators:
        get:
          summary: Retrieve investigators (Persons) associated with a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.InvestigatorCollection"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/sponsor:
        get:
          summary: Retrieve additional sponsor information for a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.Sponsor"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      /proposal/{id}/funding:
        get:
          summary: Retrieve additional funding details for a specific Proposal.
          description: ""
          parameters:
            - in: path
              name: id
              description: "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)"
              required: true
              type: string
            - in: query
              name: expand
              description: "Object expansion notation for meta child objects"
              required: false
              type: string
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Proposal.Funding"
            "404":
              description: Proposal not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
      
  # spec/paths\Test Paths.yaml
  Test:
    title: Test
    description: |
      Endpoint description. **Markdown** is supported. 
    routes:
      /test:
        get:
          deprecated: true
          tags:
            - Foo
            - Bar
            - Test
          summary: Test path for checking doc generating of various features
          description: |
            This *example* uses **markdown** for the __description__. 
            > Here is 
            > a block quote

            * And a undordered list 
            * of some content

            1. bananas
            2. apples

              Presumably this is a code block?
              (because of indentation...) ... maybe?

            [example link](http://example.com "Example title")
            And here is some `<strong>inline code</strong>` if you feel so inclined.
          responses:
            "200":
              description: Successful operation
              schema:
                $ref: "#/definitions/Test"
            "400":
              description: An error occured
              schema:
                $ref: "#/definitions/ErrorResponse"
        post:
          deprecated: true
          tags:
            - Test
          summary: Test POST documentation
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          produces:
            - application/json
          x-acl:
            - oris
            - test_group
            - college_admin_40000
          parameters:
            - in: body
              name: body
              description: Message body
              required: false
              schema:
                type: string
          responses:
            "201":
              description: Created
              schema:
                $ref: '#/definitions/Test'
            "404":
              description: Test not available
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"
        put:
          deprecated: true
          tags:
            - Test
          summary: Test PUT documentation
          consumes:
            - application/x-www-form-urlencoded
            - application/json
          x-acl:
            - oris
            - test_group
          parameters:
            - in: body
              name: body
              description: Message body
              required: false
              schema:
                type: string
          responses:
            "200":
              description: Resource Updated
              schema:
                $ref: '#/definitions/Test'
            "404":
              description: Test not available
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"
        delete:
          deprecated: true
          tags:
            - Test
          summary: Test DELETE documentation
          x-acl:
            - oris
          responses:
            "200":
              description: Successful deletion
            "404":
              description: Test not found
              schema:
                $ref: "#/definitions/ErrorResponse"
            "500":
              description: Internal server error
              schema:
                $ref: "#/definitions/ErrorResponse"

definitions:

  # spec/definitions\Award Definitions.yaml
  AwardCollection:
    description: A collection of Awards.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/Award"
  Award:
    description: A distinct Award from a Sponsor.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique GRT number (e.g. GRT00012345).
      title:
        type: string
      type:
        type: string
        description: Award type code (e.g. COST REIMBURS).
      startDate:
        type: string
        format: date
        description: Start of the Award period.
      endDate:
        type: string
        format: date
        description: End of the Award period.
      departments:
        x-meta-uri: "/award/{id}/departments"
        $ref: "#/definitions/Award.DepartmentCollection"
      colleges:
        x-meta-uri: "/award/{id}/colleges"
        $ref: "#/definitions/CollegeCollection"
      projects:
        x-meta-uri: "/award/{id}/projects"
        $ref: "#/definitions/ProjectCollection"
      principalInvestigator:
        $ref: "#/definitions/Person"
      investigators:
        x-meta-uri: "/award/{id}/investigators"
        $ref: "#/definitions/Award.InvestigatorCollection"
      spo:
        $ref: "#/definitions/Person"
      sponsor:
        x-meta-uri: "/award/{id}/sponsor"
        $ref: "#/definitions/Award.Sponsor"
      attributes:
        x-meta-uri: "/award/{id}/attributes"
        $ref: "#/definitions/Award.Attributes"
      information:
        x-meta-uri: "/award/{id}/information"
        $ref: "#/definitions/Award.Information"
      terms:
        x-meta-uri: "/award/{id}/terms"
        $ref: "#/definitions/Award.Terms"
      payments:
        x-meta-uri: "/award/{id}/payments"
        $ref: "#/definitions/Award.Payments"
      funding:
        x-meta-uri: "/award/{id}/funding"
        $ref: "#/definitions/Award.Funding"
      history:
        x-meta-uri: "/award/{id}/history"
        $ref: "#/definitions/Award.History"
      milestones:
        x-meta-uri: "/award/{id}/milestones"
        $ref: "#/definitions/Award.Milestones"
  Award.DepartmentCollection:
    description: Departments that have an allocation to a particular Award.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/departments"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single department with an Award allocation.
          properties:
            allocation:
              type: number
              description: Percent allocation of Award funding.
            department:
              $ref: "#/definitions/Department"
  Award.InvestigatorCollection:
    description: "Investigators attached to an Award, with associated Effort"
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/investigators"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single Person on an Award
          properties:
            effort:
              type: number
              description: Percent effort the Person spends on the Award Projects.
            role:
              type: string
              description: Specific role assigned to the Person (PI|COPI)
            person:
              $ref: "#/definitions/Person"
  Award.Sponsor:
    # TODO: Sponsor will most likely need its own endpoint.
    description: Sponsor funding a specific Award.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/sponsor"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique sponsor ID (e.g. 64000002)
      name:
        type: string
        description: Sponsor name (e.g. National Cancer Institute)
      awardNumber:
        # TODO: If sponsor becomes its own endpoint, this will need to be elsewhere
        # as it's a per-award field. (so: Award.sponsorAwardNumber)
        type: string
        description: Award number used by the sponsor for reference (e.g. R01CA188269)
      mailingAddress:
        type: object
        description: Primary mailing address for the Sponsor.
        properties:
          # TODO: Split this up further. It's three address lines in PiPortal currently.
          address1:
            type: string
          address2:
            type: string
          address3:
            type: string
      billingAddress:
        type: object
        properties:
          # TODO: PiPortal displays this as 5 lines
          name:
            type: string
          address1:
            type: string
          address2:
            type: string
          address3:
            type: string
          address4:
            type: string
      technicalContact:
        type: object
        properties:
          name:
            type: string
          title:
            type: string
          phone:
            type: string
          fax:
            type: string
          email:
            type: string
      administrativeContact:
        type: object
        properties:
          name:
            type: string
          title:
            type: string
          phone:
            type: string
          fax:
            type: string
          email:
            type: string
  Award.Attributes:
    description: List of attribute codes applied to a specific Award. 
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/attributes"
        $ref: "#/definitions/Meta"
      attributes:
        type: array
        items:
          type: object
          properties:
            code:
              type: string
              description: Attribute code (e.g. CFDA)
            description:
              type: string
              description: Human-readable version of the attribute code
            value:
              type: string
            comments:
              type: string
  Award.Information:
    description: List of additional information codes applied to a specific Award. 
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/information"
        $ref: "#/definitions/Meta"
      information:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              description: "???? - Two columns 'Detailed Information' in PiPortal"
            description:
              type: string
              description: ????
            description2:
              type: string
              description: "???? - Two columns 'Detailed Information' in PiPortal"
            comments:
              type: string
  Award.Terms:
    description: List of terms applied to a specific Award. 
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/terms"
        $ref: "#/definitions/Meta"
      terms:
        type: array
        items:
          type: object
          properties:
            guide:
              type: string
              description: Term guide code (e.g. ACKN)
            description:
              type: string
              description: Human-readable version of the guide code (e.g. Acknowledgment Required)
            comments:
              type: string
  Award.Payments:
    description: Payment data for a specific Award.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/payments"
        $ref: "#/definitions/Meta"
      hasLetterOfCredit:
        type: boolean
        description: Whether this Award has been funded by letter of credit (thus no payment data).
      billingFrequency:
        type: string
        description: How often the Award is billed (e.g. 'Monthly End-of Month Cycle')
      totalBilledAmount:
        type: number
        format: float
        description: Summation of billed invoice amounts.
      totalPaidAmount:
        type: number
        format: float
        description: Summation of paid invoice amounts.
      invoices:
        type: array
        items:
          type: object
          properties:
            invoice:
              type: string
            invoiceDate:
              type: string
              format: date
            billedAmount:
              type: number
              format: float
            paidAmount:
              type: number
              format: float
            status:
              type: string
            date:
              # TODO: What does this date mean?
              type: string
              format: date
            userId:
              # TODO: What are these user IDs?
              type: string
            checks:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  checkNumber:
                    type: string
                  amount:
                    type: number
                    format: float
                  nameOnCheck:
                    type: string
                  origin:
                    type: string
                  paymentMethod:
                    type: string
                  depositId:
                    type: string
                  sequence:
                    type: number
  Award.Funding:
    description: Funding data for a specific Award.
    x-endpoint: Award
    # TODO: There MAY be some overlap with Award.Payments
    properties:
      meta:
        x-meta-uri: "/award/{id}/funding"
        $ref: "#/definitions/Meta"
      totalAwarded:
        type: number
        format: float
      totalAnticipated:
        type: number
        format: float
      awarded:
        type: array
        description: Line items for periodic Award funding.
        items:
          type: object
          properties:
            period:
              type: number
            reference:
              type: string
              description: Sponsor reference number (e.g. R01CA188269-03)
            reportedDate:
              type: string
              format: date
            amount:
              type: number
              format: float
      anticipated:
        type: array
        description: Line items for anticipated future funding.
        items:
          type: object
          properties:
            period:
              type: number
            reference:
              type: string
              description: Sponsor reference number (e.g. R01CA188269-04)
            amount:
              type: number
              format: float
  Award.History:
    description: Audit history of Award amendments.
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/history"
        $ref: "#/definitions/Meta"
      amendments:
        type: array
        items:
          type: object
          properties:
            amendment:
              type: number
            date:
              type: string
              format: date
            code:
              type: string
              description: Reason code (e.g. Additional Time)
            reason:
              type: string
              description: Reason for the amendment (e.g. PI Request)
            description:
              type: string
  Award.Milestones:
    # TODO: This is exactly the same as Project.Reports. 
    # Which one has the correct naming convention?
    description: List of milestone reports on a specific Award. 
    x-endpoint: Award
    properties:
      meta:
        x-meta-uri: "/award/{id}/milestones"
        $ref: "#/definitions/Meta"
      reports:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              description: Report type code (e.g. TECH)
            frequency:
              type: string
              description: Report frequency code (e.g. ANNUAL)
            fromDate:
              type: string
              format: date
            toDate:
              type: string
              format: date
            dueDate:
              type: string
              format: date
            group:
              type: string
              # TODO: What data is in here?
            completionDate:
              type: string
              format: date
            responsiblePerson:
              type: string
              # TODO: What does data look like in here?
            comments:
              type: string


  # spec/definitions\College Definitions.yaml
  CollegeCollection:
    description: A collection of College resources.
    x-endpoint: College
    properties:
      meta:
        x-meta-uri: "/college"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/College"
  College:
    description: A distinct College in the University.
    x-endpoint: College
    properties:
      meta:
        x-meta-uri: "/college/{id}"
        $ref: "#/definitions/Meta"
      id:
        type: string
      title:
        type: string
      awards:
        x-meta-uri: "/college/{id}/awards"
        $ref: "#/definitions/AwardCollection"
      projects:
        x-meta-uri: "/college/{id}/projects"
        $ref: "#/definitions/ProjectCollection"
      proposals:
        x-meta-uri: "/college/{id}/proposals"
        $ref: "#/definitions/ProposalCollection"
      departments:
        x-meta-uri: "/college/{id}/departments"
        $ref: "#/definitions/DepartmentCollection"
      # TODO: Do we need an investigators collection? It currently
      # does not exist within PIPortal at the college list level.
  # spec/definitions\Department Definitions.yaml
  DepartmentCollection:
    description: A collection of Department resources.
    x-endpoint: Department
    properties:
      meta:
        x-meta-uri: "/department"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/Department"
  Department:
    description: A distinct Department in the University.
    x-endpoint: Department
    properties:
      meta:
        x-meta-uri: "/department/{id}"
        $ref: "#/definitions/Meta"
      id:
        type: string
      title:
        type: string
      dnode:
        # TODO: Define this! (And whether we actually need it)
        type: string
        description: ????
      dnodeTitle:
        # TODO: Define this! (And whether we actually need it)
        type: string
        description: ????
      awards:
        x-meta-uri: "/department/{id}/awards"
        $ref: "#/definitions/AwardCollection"
      projects:
        x-meta-uri: "/department/{id}/projects"
        $ref: "#/definitions/ProjectCollection"
      proposals:
        x-meta-uri: "/department/{id}/proposals"
        $ref: "#/definitions/ProposalCollection"
      investigators:
        # description: Investigators (Person) that have Awards within this Department.
        x-meta-uri: "/department/{id}/investigators"
        $ref: "#/definitions/PersonCollection"
  # spec/definitions\Error Definitions.yaml
  ErrorResponse:
    required:
      - responseCode
      - message
      - developerMessage
    properties:
      responseCode:
        type: integer
        format: int32
        example: 400
      message:
        type: string
        description: A user friendly error message that could potentially be reflected back in an application. 
        example: Person not found
      developerMessage:
        type: string
        description: An error string oriented toward helping developers debug consumer code.
        example: Requested resource identifier (ResID) does not exist.

  # spec/definitions\Fom Definitions.yaml
  Fom.Projects:
    description: Collection of projects.
    x-endpoint: FOM
    properties:
      project:
        type: array
        items:
          type: object
          description: A thin definition of a single project.
          properties:
            id:
              type: string
              description: "Unique project ID. (e.g. 60038536)"
            title:
              type: string
              description: "Title of the project."
            resid:
              type: string
              description: "ResID of the person matching the project."
            namen:
              type: string
              description: "NameN of the person matching the project."
  Fom.ProjectPis:
    description: A collection of project PIs
    x-endpoint: FOM
    properties:
      project:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: "Unique project ID. (e.g. 60038536)"
            name:
              type: string
              description: "PI name, formatted as Last Name, First Name"
            empid:
              type: string
              description: "Employee ID of the project's PI."
            email:
              type: string
              description: "Email address of the project's PI."
  Fom.Departments:
    description: A collection of department entries.
    x-endpoint: FOM
    properties:
      department:
        type: array
        items:
          type: object
          description: A thin representation of a department.
          properties: 
            id:
              type: string
              description: Unique department ID
            title:
              type: string
              description: Department title
            dnode:
              type: string
              description: ????
            dnode_title:
              type: string
              description: ????
  # spec/definitions\FundOps Definitions.yaml

  FundingOpportunities:
    description: A list of funding opportunities.
    x-endpoint: FundOps
    properties: 
      meta:
        x-meta-uri: "/fundops"
        $ref: "#/definitions/Meta"
      opportunities:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
              description: Unique identifier
            opportunity:
              type: string
              description: Title of the opportunity
            last_updated:
              type: string
              format: datetime
            internal_intent_date:
              type: string
              format: datetime
            sponsor_due_date:
              type: string
              format: datetime
            applications_allowed:
              type: number
            limitation_note:
              type: string
            internal_candidate_requirements:
              type: string
            contact:
              type: string
            colleges:
              type: string
              description: Semi-colon separated list of college titles.
            candidates:
              type: string
  # spec/definitions\Legacy Definitions.yaml
  Legacy.UserTraining:
    description: Collection of users with training data.
    x-endpoint: Legacy
    properties:
      user:
        type: array
        items:
          type: object
          description: Training information for a single user.
          properties:
            resid:
              type: string
            namen:
              type: string
            certificate:
              type: array
              items:
                type: object
                description: A single certificate or training status. 
                properties:
                  id:
                    type: string
                    description: "Type of certificate (e.g. COI, PIE, CITI)"
                  name:
                    type: string
                    description: "Longer type string (e.g. Conflict of Interest)"
                  dateReceived:
                    type: string
                    description: "mm/dd/YYYY of when the certificate was received, or null if not applicable."
                  dateExpired:
                    type: string
                    description: "mm/dd/YYYY of when the certificate expires, or null if not applicable."
                  status:
                    type: string
                    description: "Status string for a certificate (e.g. Incomplete)"
                  comments:
                    type: string
                    description: "Additional comments attached to a certificate."
                  companies:
                    type: array
                    description: "COI specific field. List of companies entered on a user's COI."
                    items:
                      type: string

  # spec/definitions\Meta Definitions.yaml
  Meta:
    description: Meta attribute for a single resource.
    properties:
      uri:
        type: string
        description: Unique URI to this resource. 
      type:
        type: string
        description: Type of resource described. This should simply be "resource".
  MetaCollection:
    description: "Meta attribute for a non-paginated collection of resources."
    properties:
      uri:
        type: string
        description: Unique URI to this resource.
      type:
        type: string
        description: Type of resource described. This should simply be "collection".
      total:
        type: number
        description: Total items that exist within this collection.
  MetaPaginatedCollection:
    description: "Meta attribute for a paginated collection of resources."
    properties:
      uri:
        type: string
        description: Unique URI to this page of a paginated collection.
      type:
        type: string
        # TODO: Should a paginated collection still be of type "collection"?
        description: Type of resource described. This should simply be "collection".
      total:
        type: number
        description: Total items that exist within this paginated collection.
      page:
        type: number
        description: Zero-indexed page currently being accessed.
      limit:
        type: number
        description: Number of items displayed per-page.
      next:
        type: string
        description: Unique URI to the next page in the collection.
      previous:
        type: string
        description: Unique URI to the previous page in the collection.
  # spec/definitions\Person Definitions.yaml
  PersonCollection:
    description: Collection of Person resources.
    x-endpoint: Person
    properties:
      meta:
        x-meta-uri: "/person"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:  
          $ref: "#/definitions/Person"
  Person:
    # Stub to get this to compile
    description: ""
    x-endpoint: Person
    properties:
      meta:
        x-meta-uri: "/person/{id}"
        $ref: "#/definitions/Meta"
      resId:
        type: string
        description: |
          Unique ResID of the Person. Usually equivalent to OSUID, 
          except for guest accounts.
      osuId:
        type: string
        description: University-created ID for the Person.
      username:
        # NOTE: Using "username" as that's how Find People does it.
        type: string
        description: Unique Name.N username within the University.
      prefix:
        # TODO: This doesn't actually exist in our data, I just like the idea.
        # And for things like Buck-IRB when we need to specify all this in
        # outgoing "official" emails, it seems like a good idea to store it. 
        type: string
        description: "Name prefix (e.g. Dr, Mr, Ms, Mrs)"
      suffix:
        # TODO: This doesn't actually exist in our data, I just like the idea.
        # And for things like Buck-IRB when we need to specify all this in
        # outgoing "official" emails, it seems like a good idea to store it. 
        type: string
        description: "Name suffix (e.g. MD, CSP, etc)"
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      osuEmail:
        type: string
        description: University-created email for the Person.
      preferredEmail:
        type: string
        description: |
          Preferred email the user set for themselves via the OR Register app. 
          This may differ from osuEmail.
      title:
        type: string
        description: University job title (e.g. Sr Systems Developer/Engineer)
      department:
        # description: Primary Department.
        x-meta-uri: "/department/{id}"
        $ref: "#/definitions/Department"
      college:
        # description: Primary College.
        x-meta-uri: "/college/{id}"
        $ref: "#/definitions/College"
      projects:
        x-meta-uri: "/person/{id}/projects"
        $ref: "#/definitions/ProjectCollection"
      proposals:
        x-meta-uri: "/person/{id}/proposals"
        $ref: "#/definitions/ProposalCollection"
      awards:
        x-meta-uri: "/person/{id}/awards"
        $ref: "#/definitions/AwardCollection"
      certificates:
        x-meta-uri: "/person/{id}/certificates"
        $ref: "#/definitions/Person.Certificates"
  Person.Certificates:
    description: A list of certificates/training for an individual.
    # TODO: Redefine what properties apply to what certificates/training, 
    # and an actual complete list of which certs exist.
    x-endpoint: Person
    properties:
      meta:
        x-meta-uri: "/person/{id}/certificates"
        $ref: "#/definitions/Meta"
      coi:
        type: object
        description: Most recent Conflict of Interest submission results.
        properties:
          dateReceived:
            type: string
            format: date
            description: "mm/dd/YYYY of when the COI was last submitted."
          dateExpired:
            type: string
            format: date
            description: "mm/dd/YYYY of when the current COI expires."
          status:
            type: string
            description: "Current status of the COI submission (e.g. Incomplete)"
          comments:
            type: string
            description: Additional comments attached to the COI.
          companies:
            type: array
            description: List of companies entered on a Person's COI submission.
            items:
              type: string
      citi:
        type: object
        description: CITI training status.
        properties:
          # TODO: More properties!
          dateReceived:
            type: string
            format: date
            description: "mm/dd/YYYY of when CITI training was recorded."
          dateExpired:
            type: string
            format: date
            description: "mm/dd/YYYY of when CITI training expires."
      pie:
        type: object
        description: PI-Eligibility certification. 
        properties:
          dateReceived:
            type: string
            format: date
            description: "mm/dd/YYYY of when this Person became PI-eligible."

  # spec/definitions\Project ACL Definitions.yaml
  Project.AclCollection:
    description: Collection of ACLs for a Project.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/acl"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:  
          $ref: "#/definitions/Project.Acl"
  Project.Acl:
    description: Project-specific ACL permissions set for an individual Person.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/acl/{person_id}"
        $ref: "#/definitions/Meta"
      permissions:
        type: array
        items:
          type: string
          # TODO: Define allowed values (financial, team, etc)
      person:
        x-meta-uri: "/person/{id}"
        $ref: "#/definitions/Person"
  
  # spec/definitions\Project Definitions.yaml
  ProjectCollection:
    description: A collection of Projects.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/Project"
  Project:
    description: A distinct Project.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique project number (e.g. 600012345).
      title:
        type: string
      startDate:
        type: string
        format: date
        description: Start date of the project period.
      endDate:
        type: string
        # format: date - TODO: Figure out if they actually ARE stored as dates,
        # and if the extra information in PIPortal (below) is actually merged
        # in from another source when displayed. I'd prefer this to be a date!
        description: |
          End date of the project period. Note that this may not
          actually be a date (e.g. "01/01/2015 Closed 02/10/2015 $16,000.00")
      facilitiesAndAdminRate:
        type: string
        format: float
        description: "Facilities & Administrative fee rate (e.g. 10.00)"
      facilitiesAndAdminType:
        type: string
        description: "Facilities & Administrative fee type (e.g. MTDC)"
      departments:
        x-meta-uri: "/project/{id}/departments"
        $ref: "#/definitions/Project.DepartmentCollection"
      colleges:
        x-meta-uri: "/project/{id}/colleges"
        $ref: "#/definitions/CollegeCollection"
      award:
        x-meta-uri: "/award/{id}"
        $ref: "#/definitions/Award"
      proposal:
        # TODO: Assumption that each project has, at most, one Proposal.
        x-meta-uri: "/proposal/{id}"
        $ref: "#/definitions/Proposal"
      principalInvestigator:
        $ref: "#/definitions/Person"
      investigators:
        x-meta-uri: "/project/{id}/investigators"
        $ref: "#/definitions/Project.InvestigatorCollection"
      spo:
        x-meta-uri: "/person/{id}"
        $ref: "#/definitions/Person"
      sponsor:
        x-meta-uri: "/project/{id}/sponsor"
        $ref: "#/definitions/Project.Sponsor"
      information:
        x-meta-uri: "/project/{id}/information"
        $ref: "#/definitions/Project.Information"
      terms:
        x-meta-uri: "/project/{id}/terms"
        $ref: "#/definitions/Project.Terms"
      reports:
        x-meta-uri: "/project/{id}/reports"
        $ref: "#/definitions/Project.Reports"
      expenditures:
        x-meta-uri: "/project/{id}/expenditures"
        $ref: "#/definitions/Project.Expenditures"
      commitments:
        x-meta-uri: "/project/{id}/commitments"
        $ref: "#/definitions/Project.Commitments"
      financials:
        x-meta-uri: "/project/{id}/financials"
        $ref: "#/definitions/Project.Financials"
      alerts:
        # TODO: Define!
        x-meta-uri: "/project/{id}/alerts"
        $ref: "#/definitions/Project.AlertCollection"
  Project.DepartmentCollection:
    description: |
      Departments that have an allocation 
      to a particular Project.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/departments"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single department with a Project allocation.
          properties:
            allocation:
              type: number
              description: Percent allocation of Project funding.
            department:
              $ref: "#/definitions/Department"
  Project.InvestigatorCollection:
    description: "Investigators attached to a Project."
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/investigators"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single Person on a Project
          properties:
            role:
              type: string
              description: Specific role assigned to the Person (PI|COPI)
            person:
              $ref: "#/definitions/Person"
  Project.Sponsor:
    # TODO: Sponsor will most likely need its own endpoint.
    description: Sponsor funding a specific Project.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/sponsor"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique sponsor ID (e.g. 64000002)
      name:
        type: string
        description: Sponsor name (e.g. National Cancer Institute)
  Project.Information:
    description: |
      List of additional information codes 
      applied to a specific Project. 
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/information"
        $ref: "#/definitions/Meta"
      information:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              description: Code type (e.g. Salary Cap)
            description:
              type: string
              description: |
                Code description (e.g. Fee Code S - Tuition 
                and fees will be charged to the project.)
  Project.Terms:
    description: List of terms applied to a specific Project. 
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/terms"
        $ref: "#/definitions/Meta"
      terms:
        type: array
        items:
          type: object
          properties:
            guide:
              type: string
              description: Term guide code (e.g. BUDG)
            description:
              type: string
              description: |
                Human-readable version of the guide code 
                (e.g. Budget restrictions apply)
            comments:
              type: string
  Project.ReportCollection:
    # TODO: This is exactly the same as Award.Milestones. 
    # Which one has the correct naming convention?
    description: A collection of Project.Report resources.
    x-endpoint: Project
    properties:
      meta:
        x-meta-uri: "/project/{id}/reports"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/Project.Report"
  Project.Report:
    description: A single report (milestone) on a specific Project.
    x-endpoint: Project
    properties:
      type:
        type: string
        description: Report type code (e.g. TECH)
      frequency:
        type: string
        description: Report frequency code (e.g. ANNUAL)
      fromDate:
        type: string
        format: date
      toDate:
        type: string
        format: date
      dueDate:
        type: string
        format: date
      group:
        type: string
        description: Reporting group (e.g. BG001)
      completionDate:
        type: string
        format: date
      responsiblePerson:
        type: string
        # TODO: What does data look like in here?
      comments:
        type: string
  Project.Expenditures:
    description: |
      Expenditures within a specified period of the project's life.
      Total costs and line items for each category will only summarize
      information between the specified startDate and endDate.  
      This is a combination of both the PIPortal Expenditures and 
      Personnel sections.
    x-endpoint: Project
    properties:
      meta: 
        x-meta-uri: "/project/{id}/expenditures"
        $ref: "#/definitions/Meta"
      startDate:
        type: string
        format: date
        description: Start date of the expenditures report.
      endDate:
        type: string
        format: date
        description: End date of the expenditures report.
      totalSponsorCost:
        type: number
        format: float
        description: Total Sponsor cost for the reporting period.
      totalThirdPartyCost:
        type: number
        format: float
        description: Total third party cost for the reporting period.
      totalCostShare:
        type: number
        format: float
        description: Total OSU Cost-Share for the reporting period.
      sponsorCost:
        type: array
        description: Line items for Sponsor costs.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            account:
              type: string
              description: |
                Account description 
                (e.g. SubContract-Portion Under $25K)
            vendor:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
            voucher:
              type: string
              description: Voucher number (e.g. 15YYP8TN)
      thirdPartyCost:
        type: array
        description: Line items for third party costs.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            accountDescription:
              type: string
              description: |
                Account category 
                (e.g. SubContract-Portion Under $25K)
            transaction:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
            voucher:
              type: string
              description: Voucher number (e.g. 15YYP8TN)
      costShare:
        type: array
        description: Line items for OSU Cost-Share.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            accountDescription:
              type: string
              description: |
                Account category 
                (e.g. SubContract-Portion Under $25K)
            transaction:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
            voucher:
              type: string
              description: Voucher number (e.g. 15YYP8TN)
      personnel:
        type: array
        description: |
          Personnel expenditures within the reporting period, 
          both totals by personnel as well as line items for 
          each reporting month.
        items:
          type: object
          properties:
            person:
              $ref: "#/definitions/Person"
            title:
              # TODO: Necessary? Is it in Person already? Is it project-specific?
              type: string
              description: Person's title (e.g. Research Specialist)
            fte:
              type: number
              format: float
              # TODO: FTE. Period? Project? What specifically?
              description: The FTE of the person (for the Period? The project?)
            totalSalaryCost:
              type: number
              format: float
              description: Total salary/wages costs for the reporting period.
            totalBenefitsCost:
              type: number
              format: float
              description: Total benefits costs for the reporting period.
            totalTuitionCost:
              type: number
              format: float
              description: Total tuition costs for the reporting period.
            costLineItems:
              type: array
              description: Line item details of costs for the reporting period.
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    description: Specific month the cost occurred.
                  description:
                    type: string
                    description: |
                      Specific cost description 
                      (e.g. Monthly Payroll, Unclassified Regular>=50%)
                  salary:
                    type: number
                    format: float
                    description: Salary cost of this line item.
                  benefits:
                    type: number
                    format: float
                    description: Benefits cost of this line item.
                  tuition:
                    type: number
                    format: float
                    description: Tuition cost of this line item.
            totalSalaryCommitment:
              type: number
              format: float
            totalBenefitsCommitment:
              type: number
              format: float
            totalTuitionCommitment:
              type: number
              format: float
            commitmentLineItems:
              type: array
              description: Line item details of commitments for the reporting period.
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    description: Specific month the commitment occurred.
                  description:
                    type: string
                    description: |
                      Specific commitment description 
                      (e.g. Payroll Commitment, Faculty Group Practice RCP10)
                  salary:
                    type: number
                    format: float
                    description: Salary commitment of this line item.
                  benefits:
                    type: number
                    format: float
                    description: Benefits commitment of this line item.
                  tuition:
                    type: number
                    format: float
                    description: Tuition commitment of this line item.
  Project.Commitments:
    # TODO: See if this is redundant with Commitments, and whether 
    # things can be restructured to collapse the two together.
    description: |
      ...
    x-endpoint: Project
    properties:
      meta: 
        x-meta-uri: "/project/{id}/commitments"
        $ref: "#/definitions/Meta"
      totalSponsorCommitment:
        type: number
        format: float
        description: Total Sponsor commitment.
      totalThirdPartyCommitment:
        type: number
        format: float
        description: Total third party commitment.
      totalCostShareCommitment:
        type: number
        format: float
        description: Total OSU Cost-Share commitment.
      sponsorCommitment:
        type: array
        description: Line items for Sponsor commitments.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            account:
              type: string
              description: |
                Account description 
                (e.g. SubContract-Portion Under $25K)
            vendor:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
      thirdPartyCommitment:
        type: array
        description: Line items for third party commitments.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            accountDescription:
              type: string
              description: |
                Account category 
                (e.g. SubContract-Portion Under $25K)
            transaction:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
      costShareCommitment:
        type: array
        description: Line items for OSU Cost-Share commitments.
        items:
          type: object
          properties:
            date:
              type: string
              format: date
            accountDescription:
              type: string
              description: |
                Account category 
                (e.g. SubContract-Portion Under $25K)
            transaction:
              type: string
              description: |
                Vendor/Transaction details 
                (e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)
            amount:
              type: number
              format: float
            journalEntry:
              type: string
              description: PO/Journal number (e.g. RF01234567)
      personnel:
        # NOTE: This breaks off from PIPortals way of doing things as 
        # personnel costs/commitments are displayed together, but logically
        # personnel commitments should probably go under Project.Commitments,
        # and actual costs go under Project.Expenditures. If necessary to 
        # display both simultaneously, these can be queried together.
        # The below is a simplified version of personnel data to just
        # show commitments.
        type: array
        description: |
          Current personnel commitments, by person.
        items:
          type: object
          properties:
            person:
              x-meta-uri: "/person/{id}"
              $ref: "#/definitions/Person"
            fte:
              type: number
              format: float
              # TODO: FTE. Period? Project? What specifically?
              description: The FTE of the person allocated to the Project.
            totalSalaryCommitment:
              type: number
              format: float
            totalBenefitsCommitment:
              type: number
              format: float
            totalTuitionCommitment:
              type: number
              format: float
            lineItems:
              type: array
              description: Line item details of current commitments.
              items:
                type: object
                properties:
                  date:
                    # TODO: Is this necessary? Since it 
                    # should always be current month?
                    type: string
                    format: date
                    description: Specific month the commitment occurred.
                  description:
                    type: string
                    description: |
                      Specific commitment description 
                      (e.g. Payroll Commitment, Faculty Group Practice RCP10)
                  salary:
                    type: number
                    format: float
                    description: Salary commitment of this line item.
                  benefits:
                    type: number
                    format: float
                    description: Benefits commitment of this line item.
                  tuition:
                    type: number
                    format: float
                    description: Tuition commitment of this line item.
  Project.Financials:
    description: |
      Project financial line items broken down by group (sponsor, 
      cost share, third party) and category (budget, expended, 
      commitments, balance), along with totals for each within a 
      particular reporting month. 
    x-endpoint: Project
    properties:
      meta: 
        x-meta-uri: "/project/{id}/financials"
        $ref: "#/definitions/Meta"
      reportDate:
        type: string
        format: date
        description: |
          The reporting month (As Of...) for budget details.
      # TODO: Obviously, sponsor/costshare/thirdparty share the same
      # data structure (although third party does not have an F&A section) 
      # So it might be smarter to split them up into more common data types? 
      # (e.g. Project.LineItemCollection/LineItem)
      sponsorBudget:
        type: object
        description: ...
        properties:
          # NOTE: What's missing is total direct and total F&A items.
          # These can be calculated by summing line items however.
          # If those are something we need without line items, will
          # probably need to restructure and add a different route 
          # for line items. 
          totalBudget:
            type: number
            format: float
            description: |
              Total (direct + F&A) budget for the reporting month.
          totalExpended:
            type: number
            format: float
            description: |
              Total (direct + F&A) expended for the reporting month.
          totalCommitment:
            type: number
            format: float
            description: |
              Total (direct + F&A) commitments for the reporting month.
          totalBalance:
            type: number
            format: float
            description: |
              Total (direct + F&A) balance for the reporting month.
          direct:
            type: array
            description: List of direct costs to the sponsor.
            items:
              type: object
              properties:
                lineItem:
                  type: string
                budget:
                  type: number
                  format: float
                expended:
                  type: number
                  format: float
                commitment:
                  type: number
                  format: float
                balance:
                  type: number
                  format: float
          facilitiesAndAdmin:
            type: array
            description: |
              List of Facilities and Administrative 
              costs to the sponsor.
            items:
              type: object
              properties:
                lineItem:
                  type: string
                budget:
                  type: number
                  format: float
                expended:
                  type: number
                  format: float
                commitment:
                  type: number
                  format: float
                balance:
                  type: number
                  format: float
      costShareBudget:
        type: object
        description: ...
        properties:
          # NOTE: What's missing is total direct and total F&A items.
          # These can be calculated by summing line items however.
          # If those are something we need without line items, will
          # probably need to restructure and add a different route 
          # for line items. 
          totalBudget:
            type: number
            format: float
            description: |
              Total (direct + F&A) budget for the reporting month.
          totalExpended:
            type: number
            format: float
            description: |
              Total (direct + F&A) expended for the reporting month.
          totalCommitment:
            type: number
            format: float
            description: |
              Total (direct + F&A) commitments for the reporting month.
          totalBalance:
            type: number
            format: float
            description: |
              Total (direct + F&A) balance for the reporting month.
          direct:
            type: array
            description: List of costs to OSU Cost-Share.
            items:
              type: object
              properties:
                lineItem:
                  type: string
                budget:
                  type: number
                  format: float
                expended:
                  type: number
                  format: float
                commitment:
                  type: number
                  format: float
                balance:
                  type: number
                  format: float
          facilitiesAndAdmin:
            type: array
            description: |
              List of Facilities and Administrative 
              costs to OSU Cost-Share.
            items:
              type: object
              properties:
                lineItem:
                  type: string
                budget:
                  type: number
                  format: float
                expended:
                  type: number
                  format: float
                commitment:
                  type: number
                  format: float
                balance:
                  type: number
                  format: float
      thirdPartyBudget:
        type: object
        description: ...
        properties:
          totalBudget:
            type: number
            format: float
            description: |
              Total (direct) budget for the reporting month.
          totalExpended:
            type: number
            format: float
            description: |
              Total (direct) expended for the reporting month.
          totalCommitment:
            type: number
            format: float
            description: |
              Total (direct) commitments for the reporting month.
          totalBalance:
            type: number
            format: float
            description: |
              Total (direct) balance for the reporting month.
          direct:
            type: array
            description: List of costs to third parties.
            items:
              type: object
              properties:
                lineItem:
                  type: string
                budget:
                  type: number
                  format: float
                expended:
                  type: number
                  format: float
                commitment:
                  type: number
                  format: float
                balance:
                  type: number
                  format: float
          # NOTE: F&A has been removed, as it does not
          # apply to third parties.
          # TODO: Verify this is true. My notes may be off.


  
  # spec/definitions\Proposal Definitions.yaml
  ProposalCollection:
    description: A collection of Proposals.
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          $ref: "#/definitions/Proposal"
  Proposal:
    description: A distinct Proposal for a new project (or collection of projects).
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal/{id}"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique GRT number (e.g. GRT00012345).
      title:
        type: string
      startDate:
        type: string
        format: date
        description: Proposed start date of the Award period.
      endDate:
        type: string
        format: date
        description: Proposed end date of the Award period.
      departments:
        x-meta-uri: "/proposal/{id}/departments"
        $ref: "#/definitions/Proposal.DepartmentCollection"
      colleges:
        x-meta-uri: "/proposal/{id}/colleges"
        $ref: "#/definitions/CollegeCollection"
      projects:
        x-meta-uri: "/proposal/{id}/projects"
        $ref: "#/definitions/ProjectCollection"
      award:
        # TODO: Assumption that each proposal has, at most, one Award.
        x-meta-uri: "/award/{id}"
        $ref: "#/definitions/Award"
      principalInvestigator:
        $ref: "#/definitions/Person"
      investigators:
        x-meta-uri: "/proposal/{id}/investigators"
        $ref: "#/definitions/Proposal.InvestigatorCollection"
      spo:
        $ref: "#/definitions/Person"
      sponsor:
        x-meta-uri: "/proposal/{id}/sponsor"
        $ref: "#/definitions/Proposal.Sponsor"
      funding:
        x-meta-uri: "/proposal/{id}/funding"
        $ref: "#/definitions/Proposal.Funding"

  Proposal.DepartmentCollection:
    description: Departments that have an allocation to a particular Proposal.
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal/{id}/departments"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single department with a Proposal allocation.
          properties:
            allocation:
              type: number
              description: Percent allocation of Proposal funding.
            department:
              $ref: "#/definitions/Department"
  Proposal.InvestigatorCollection:
    description: "Investigators attached to a Proposal, with a proposed role."
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal/{id}/investigators"
        $ref: "#/definitions/MetaCollection"
      collection:
        type: array
        items:
          type: object
          description: A single Person on a Proposal
          properties:
            role:
              type: string
              description: Specific role assigned to the Person (PI|COPI)
            person:
              $ref: "#/definitions/Person"
  Proposal.Sponsor:
    # TODO: Sponsor will most likely need its own endpoint.
    description: Sponsor targetted to fund a specific Proposal.
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal/{id}/sponsor"
        $ref: "#/definitions/Meta"
      id:
        type: string
        description: Unique sponsor ID (e.g. 64000002)
      name:
        type: string
        description: Sponsor name (e.g. National Cancer Institute)
  Proposal.Funding:
    description: Funding data for a specific Proposal.
    x-endpoint: Proposal
    properties:
      meta:
        x-meta-uri: "/proposal/{id}/funding"
        $ref: "#/definitions/Meta"
      requestedBudget:
        type: number
        format: float
        description: Amount requested to fund this Proposal. 
      # TODO: We can break down funding details further with PA005 data!

  # spec/definitions\Test Definitions.yaml
  Test:
    description: |
      Just a definition to test documenting of various features.
      E.g. JSON schema attributes, Markdown, whatever.
    x-endpoint: Test
    properties:
      meta:
        x-meta-uri: "/test"
        $ref: "#/definitions/Meta"
      arrayOfObjects:
        type: array
        description: Testing an array of objects
        items:
          type: object
          description: Description of an object
          properties:
            foo:
              type: number
              description: Number of foos present
            bar:
              type: string
              description: Description of bar
      arrayOfArrays:
        type: array
        description: Testing an array of arrays
        items:
          type: array
          description: A nested array of strings
          items:
            type: string
      arrayOfRef:
        type: array
        description: Testing an array of $ref
        items:
          $ref: "#/definitions/Test"
      arrayOfStrings:
        type: array
        description: Testing an array of primitive strings
        items:
          type: string
  