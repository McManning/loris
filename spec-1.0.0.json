{
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "host": "orapps.osu.edu",
    "swagger": "2.0",
    "basePath": "/api/v1",
    "endpoints": {
        "Project": {
            "description": "Project stuff",
            "routes": {
                "/project/{id}/information": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional information for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Information"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/terms": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a list of terms for a specific Project.\nWhile these are usually the same as Award terms,\nsometimes they are not. \n",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Terms"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/expenditures": {
                    "get": {
                        "description": "If a date range is specified, it will only show expenditures\nfor that range. If not, this will retrieve all expenditures\nthroughout the life of the Project.\n",
                        "summary": "Retrieve expenditure data for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Expenditures"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            },
                            {
                                "description": "Requested start date for expenditures data",
                                "type": "string",
                                "in": "query",
                                "format": "date",
                                "name": "start"
                            },
                            {
                                "description": "Requested end date for expenditures data",
                                "type": "string",
                                "in": "query",
                                "format": "date",
                                "name": "end"
                            }
                        ]
                    }
                },
                "/project/{id}/acl/{resId}": {
                    "get": {
                        "tags": [
                            "draft"
                        ],
                        "summary": "Retrieve project-specific ACL roles \nfor the specified Person.\n",
                        "responses": {
                            "404": {
                                "description": "Project not found or Person does not \nhave existing project ACLs.\n",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Acl"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "description": "",
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "ResID of the Person resource (e.g. 200275154).",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    },
                    "delete": {
                        "tags": [
                            "draft"
                        ],
                        "summary": "Delete all project-specific ACL roles \nfor the specified Person.\n",
                        "responses": {
                            "404": {
                                "description": "Project not found or Person does not \nhave existing project ACLs.\n",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation"
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "description": "",
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "ResID of the Person resource (e.g. 200275154).",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    },
                    "post": {
                        "produces": [
                            "application/json"
                        ],
                        "tags": [
                            "draft"
                        ],
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "ResID of the Person resource (e.g. 200275154).",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            },
                            {
                                "description": "Updated ACLs for a Person",
                                "in": "body",
                                "required": false,
                                "schema": {
                                    "$ref": "#/definitions/Project.Acl"
                                },
                                "name": "body"
                            }
                        ],
                        "description": "",
                        "summary": "Set (replace) ACLs of a Person for a Project.",
                        "responses": {
                            "404": {
                                "description": "Project or Person not found.",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "201": {
                                "description": "Created",
                                "schema": {
                                    "$ref": "#/definitions/Project.Acl"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "consumes": [
                            "application/x-www-form-urlencoded",
                            "application/json"
                        ]
                    }
                },
                "/project": {
                    "get": {
                        "description": "TODO: Spec out the list of attributes we can search by. Obviously\nthis will include id, title, PI, SPO, sponsor, department, and college.\n",
                        "summary": "Search for a Project and return a collection of matches.",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search query",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/financials": {
                    "get": {
                        "description": "If the As Of date is specified, it will only report financial data\nup to the specified date. Otherwise, it will report the most recent data.\n",
                        "summary": "Retrieve additional financial data for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Financials"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            },
                            {
                                "description": "Requested As Of (up to) date for financial data.",
                                "type": "string",
                                "in": "query",
                                "format": "date",
                                "name": "asOf"
                            }
                        ]
                    }
                },
                "/project/{id}/colleges": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Colleges associated with a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/CollegeCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/reports": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve reports for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.ReportCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/investigators": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve investigators (Persons) associated with a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.InvestigatorCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/commitments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve current commitment data for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Commitments"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/acl": {
                    "get": {
                        "tags": [
                            "draft"
                        ],
                        "summary": "Retrieve a collection of all ACLs and \nPersons defined for a Project.\n",
                        "responses": {
                            "404": {
                                "description": "Project not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.AclCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "description": "",
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "ResID of the Person resource (e.g. 200275154).",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    }
                },
                "/project/{id}/sponsor": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional sponsor information for a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.Sponsor"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}/departments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Departments associated with a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project.DepartmentCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/project/{id}": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a specific Project.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Project"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID of the Project resource (e.g. 60012345).",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "Project"
        },
        "Proposal": {
            "description": "Proposal stuff",
            "routes": {
                "/proposal/{id}/sponsor": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional sponsor information for a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Proposal.Sponsor"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}/projects": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve projects associated with a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}/investigators": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve investigators (Persons) associated with a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Proposal.InvestigatorCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Proposal"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}/colleges": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Colleges associated with a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/CollegeCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal": {
                    "get": {
                        "description": "TODO: Spec out the list of attributes we can search by. Obviously\nthis will include id, title, PI, SPO, sponsor, department, and college.\n",
                        "summary": "Search for a Proposal and return a collection of matches.",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProposalCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search query",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}/departments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Departments and allocation associated with a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Proposal.DepartmentCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/proposal/{id}/funding": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional funding details for a specific Proposal.",
                        "responses": {
                            "404": {
                                "description": "Proposal not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Proposal.Funding"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Proposal, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "Proposal"
        },
        "FOM": {
            "description": "FOM stuff",
            "routes": {
                "/fom/project/{list}": {
                    "get": {
                        "description": "This is a wrapper around USP\\_FOM\\_getProjByInv, and \ncurrently only in use by the FOM vendor software.\n",
                        "summary": "Returns a collection of projects with the specified Principal Investigators, in either JSON or XML format.",
                        "responses": {
                            "200": {
                                "description": "successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Fom.Projects"
                                }
                            }
                        },
                        "deprecated": true,
                        "parameters": [
                            {
                                "description": "Comma separated list of EITHER ResIDs or NameNs (but not mixed)",
                                "type": "string",
                                "in": "path",
                                "name": "list",
                                "required": true
                            },
                            {
                                "description": "If set, the response will be in 'application/json' format",
                                "type": "string",
                                "in": "query",
                                "name": "json",
                                "required": false
                            }
                        ]
                    }
                },
                "/fom/projectpi/{list}": {
                    "get": {
                        "description": "This is a wrapper around USP\\_FOM\\_getPIByProject, and \ncurrently only in use by the FOM vendor software.\n\nPotentially equivalent to the new API:\n```\n  /api/v1/project?q=(project ID list)&expand=principalInvestigator\n```\n",
                        "summary": "Returns a collection of PI data for the requested projects, in either JSON or XML format.",
                        "responses": {
                            "200": {
                                "description": "successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Fom.ProjectPis"
                                }
                            }
                        },
                        "deprecated": true,
                        "parameters": [
                            {
                                "description": "Comma separated list of project IDs.",
                                "type": "string",
                                "in": "path",
                                "name": "list",
                                "required": true
                            },
                            {
                                "description": "If set, the response will be in 'application/json' format",
                                "type": "string",
                                "in": "query",
                                "name": "json",
                                "required": false
                            }
                        ]
                    }
                },
                "/fom/departments": {
                    "get": {
                        "description": "This is a wrapper around USP\\_FOM\\_getDeptList, with \na local JSON cache for quicker retrieval (24 hour).\nCurrently only in use by the FOM vendor software.\n\nPotentially equivalent to the new API:\n```\n  /api/v1/department\n```\n",
                        "summary": "Returns a collection of all known departments, in either JSON or XML format.",
                        "responses": {
                            "200": {
                                "description": "successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Fom.Departments"
                                }
                            }
                        },
                        "deprecated": true,
                        "parameters": [
                            {
                                "description": "If set, the response will be in 'application/json' format",
                                "type": "string",
                                "in": "query",
                                "name": "json",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "FOM"
        },
        "Award": {
            "description": "Award stuff",
            "routes": {
                "/award/{id}/history": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve amendments for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.History"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/projects": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve projects associated with a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/investigators": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve investigators (Persons) associated with a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.InvestigatorCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/sponsor": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional sponsor information for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Sponsor"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/funding": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional funding details for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Funding"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/payments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional payment information for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Payments"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/departments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Departments associated with a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.DepartmentCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/attributes": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional attributes for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Attributes"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/milestones": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve milestone reports for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Milestones"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/colleges": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Colleges associated with a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/CollegeCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/information": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve additional information for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Information"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award/{id}/terms": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a list of terms for a specific Award.",
                        "responses": {
                            "404": {
                                "description": "Award not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Award.Terms"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ID field of the Award, usually a GRT number (e.g. GRT000012345)",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/award": {
                    "get": {
                        "description": "TODO: Spec out the list of attributes we can search by. Obviously\nthis will include id, title, PI, SPO, sponsor, department, and college.\n",
                        "summary": "Search for an Award and return a collection of matches.",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/AwardCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search query",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "Award"
        },
        "Legacy": {
            "description": "Legacy stuff",
            "routes": {
                "/legacy/training/{list}": {
                    "get": {
                        "description": "This is currently a wrapper around OR_Training::createFrom(NameN|ResID)List \nmethods and in use by eProtocol. \n\nPotentially equivalent to the new API: \n```\n  /api/v1/person?q=(namen|resid list)&expand=training\n```\nor\n```\n  /api/v1/person/training?q=(namen|resid list)\n```\n",
                        "summary": "Returns a collection of training data for the requested users, in either JSON or XML format.",
                        "responses": {
                            "200": {
                                "description": "successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Legacy.UserTraining"
                                }
                            }
                        },
                        "deprecated": true,
                        "parameters": [
                            {
                                "description": "Comma separated list of EITHER ResIDs or NameNs (but not mixed)",
                                "type": "string",
                                "in": "path",
                                "name": "list",
                                "required": true
                            },
                            {
                                "description": "If set, the response will be in 'application/json' format",
                                "type": "string",
                                "in": "query",
                                "name": "json",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "Legacy"
        },
        "Person": {
            "description": "Person stuff",
            "routes": {
                "/person/{resId}/proposals": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Proposals associated with the Person.",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProposalCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ResID of the Person resource.",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    }
                },
                "/person/{resId}": {
                    "get": {
                        "description": "",
                        "summary": "Return a Person resource by ResID.",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Person"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ResID of the Person resource.",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    },
                    "put": {
                        "produces": [
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "description": "ResID of the Person to update",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            },
                            {
                                "description": "Updated person object",
                                "in": "body",
                                "required": false,
                                "schema": {
                                    "$ref": "#/definitions/Person"
                                },
                                "name": "body"
                            }
                        ],
                        "description": "",
                        "summary": "Update an existing person",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Person"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "consumes": [
                            "application/x-www-form-urlencoded",
                            "application/json"
                        ]
                    }
                },
                "/person": {
                    "get": {
                        "description": "",
                        "summary": "Search for a person by any attributes (ResID, first name, last name, name.n, etc)",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/PersonCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search terms",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": true
                            },
                            {
                                "description": "Inactive flag, if true, inactive users will \nbe included in the results collection.\n",
                                "type": "boolean",
                                "in": "query",
                                "name": "inactive",
                                "required": false
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/person/{resId}/certificates": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve Certificates/Training \nassociated with the Person.\n",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Person.Certificates"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ResID of the Person resource.",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    }
                },
                "/person/{resId}/awards": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Awards associated with the Person.",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/AwardCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ResID of the Person resource.",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    }
                },
                "/person/{resId}/projects": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Projects associated with the Person.",
                        "responses": {
                            "404": {
                                "description": "Person not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "ResID of the Person resource.",
                                "type": "string",
                                "in": "path",
                                "name": "resId",
                                "required": true
                            }
                        ]
                    }
                }
            },
            "title": "Person"
        },
        "College": {
            "description": "College stuff",
            "routes": {
                "/college": {
                    "get": {
                        "description": "",
                        "summary": "Search for a College resource, or \nretrieve a collection of all Colleges.\n",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/CollegeCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search terms",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": false
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/college/{id}/departments": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Departments associated with the College.",
                        "responses": {
                            "404": {
                                "description": "College not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/DepartmentCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique College ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/college/{id}/projects": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Projects associated with the College.",
                        "responses": {
                            "404": {
                                "description": "College not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique College ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/college/{id}/proposals": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Proposals associated with the College.",
                        "responses": {
                            "404": {
                                "description": "College not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProposalCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique College ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/college/{id}": {
                    "get": {
                        "description": "",
                        "summary": "Return a College resource by ID.",
                        "responses": {
                            "404": {
                                "description": "College not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/College"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique College ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/college/{id}/awards": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Awards associated with the College.",
                        "responses": {
                            "404": {
                                "description": "College not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/AwardCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique College ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "College"
        },
        "FundOps": {
            "description": "FundOps stuff",
            "routes": {
                "/fundops": {
                    "get": {
                        "description": "This is a wrapper around USP\\_FundOps\\_UnivDev.\n",
                        "summary": "Returns a list of current Funding Opportunities.",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/FundingOpportunities"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "title": "FundOps"
        },
        "Test": {
            "description": "Endpoint description. **Markdown** is supported. \n",
            "routes": {
                "/test": {
                    "get": {
                        "tags": [
                            "Foo",
                            "Bar",
                            "Test"
                        ],
                        "summary": "Test path for checking doc generating of various features",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Test"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "deprecated": true,
                        "description": "This *example* uses **markdown** for the __description__. \n> Here is \n> a block quote\n\n* And a undordered list \n* of some content\n\n1. bananas\n2. apples\n\n  Presumably this is a code block?\n  (because of indentation...) ... maybe?\n\n[example link](http://example.com \"Example title\")\nAnd here is some `<strong>inline code</strong>` if you feel so inclined.\n"
                    },
                    "delete": {
                        "tags": [
                            "Test"
                        ],
                        "summary": "Test DELETE documentation",
                        "responses": {
                            "404": {
                                "description": "Test not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "500": {
                                "description": "Internal server error",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful deletion"
                            }
                        },
                        "deprecated": true,
                        "x-acl": [
                            "oris"
                        ]
                    },
                    "post": {
                        "produces": [
                            "application/json"
                        ],
                        "summary": "Test POST documentation",
                        "responses": {
                            "404": {
                                "description": "Test not available",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "500": {
                                "description": "Internal server error",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "201": {
                                "description": "Created",
                                "schema": {
                                    "$ref": "#/definitions/Test"
                                }
                            }
                        },
                        "deprecated": true,
                        "x-acl": [
                            "oris",
                            "test_group",
                            "college_admin_40000"
                        ],
                        "parameters": [
                            {
                                "description": "Message body",
                                "in": "body",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                },
                                "name": "body"
                            }
                        ],
                        "tags": [
                            "Test"
                        ],
                        "consumes": [
                            "application/x-www-form-urlencoded",
                            "application/json"
                        ]
                    },
                    "put": {
                        "x-acl": [
                            "oris",
                            "test_group"
                        ],
                        "tags": [
                            "Test"
                        ],
                        "summary": "Test PUT documentation",
                        "responses": {
                            "404": {
                                "description": "Test not available",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "500": {
                                "description": "Internal server error",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Resource Updated",
                                "schema": {
                                    "$ref": "#/definitions/Test"
                                }
                            }
                        },
                        "deprecated": true,
                        "consumes": [
                            "application/x-www-form-urlencoded",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "description": "Message body",
                                "in": "body",
                                "required": false,
                                "schema": {
                                    "type": "string"
                                },
                                "name": "body"
                            }
                        ]
                    }
                }
            },
            "title": "Test"
        },
        "Department": {
            "description": "Department stuff",
            "routes": {
                "/department/{id}/investigators": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of investigators (Persons) \nassociated with the Department.\n",
                        "responses": {
                            "404": {
                                "description": "Department not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/PersonCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique Department ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/department": {
                    "get": {
                        "description": "",
                        "summary": "Search for a Department resource, or \nretrieve a collection of all Departments.\n",
                        "responses": {
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/DepartmentCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Search terms",
                                "type": "string",
                                "in": "query",
                                "name": "q",
                                "required": false
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/department/{id}": {
                    "get": {
                        "description": "",
                        "summary": "Return a Department resource by ID.",
                        "responses": {
                            "404": {
                                "description": "Department not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/Department"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique Department ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                },
                "/department/{id}/projects": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Projects associated with the Department.",
                        "responses": {
                            "404": {
                                "description": "Department not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProjectCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique Department ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/department/{id}/proposals": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Proposals associated with the Department.",
                        "responses": {
                            "404": {
                                "description": "Department not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/ProposalCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique Department ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            }
                        ]
                    }
                },
                "/department/{id}/awards": {
                    "get": {
                        "description": "",
                        "summary": "Retrieve a collection of Awards associated with the Department.",
                        "responses": {
                            "404": {
                                "description": "Department not found",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            },
                            "200": {
                                "description": "Successful operation",
                                "schema": {
                                    "$ref": "#/definitions/AwardCollection"
                                }
                            },
                            "400": {
                                "description": "An error occured",
                                "schema": {
                                    "$ref": "#/definitions/ErrorResponse"
                                }
                            }
                        },
                        "parameters": [
                            {
                                "description": "Unique Department ID.",
                                "type": "string",
                                "in": "path",
                                "name": "id",
                                "required": true
                            },
                            {
                                "description": "Object expansion notation for meta child objects",
                                "type": "string",
                                "in": "query",
                                "name": "expand",
                                "required": false
                            }
                        ]
                    }
                }
            },
            "title": "Department"
        }
    },
    "info": {
        "description": "API interface for [The Ohio State University](http://osu.edu) research data.\n\nBuilt for use by the [Office of Research](http://research.osu.edu).\n\nUtilizing [swagger.io specifications](http://swagger.io/specification) and a\ncustom serverside renderer styled loosely around Swagger Editor.\n",
        "contact": {
            "url": "http://research.osu.edu",
            "name": "Chase McManning",
            "email": "mcmanning.1@osu.edu"
        },
        "version": "1.0.0",
        "title": "Office of Research API"
    },
    "definitions": {
        "Award.Milestones": {
            "description": "List of milestone reports on a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/milestones"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dueDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "fromDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "completionDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "toDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "group": {
                                "type": "string"
                            },
                            "frequency": {
                                "description": "Report frequency code (e.g. ANNUAL)",
                                "type": "string"
                            },
                            "type": {
                                "description": "Report type code (e.g. TECH)",
                                "type": "string"
                            },
                            "responsiblePerson": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "CollegeCollection": {
            "description": "A collection of College resources.",
            "x-endpoint": "College",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/college"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/College"
                    }
                }
            }
        },
        "Award.Terms": {
            "description": "List of terms applied to a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/terms"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "description": "Human-readable version of the guide code (e.g. Acknowledgment Required)",
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "guide": {
                                "description": "Term guide code (e.g. ACKN)",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "FundingOpportunities": {
            "description": "A list of funding opportunities.",
            "x-endpoint": "FundOps",
            "properties": {
                "opportunities": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "contact": {
                                "type": "string"
                            },
                            "internal_intent_date": {
                                "type": "string",
                                "format": "datetime"
                            },
                            "applications_allowed": {
                                "type": "number"
                            },
                            "sponsor_due_date": {
                                "type": "string",
                                "format": "datetime"
                            },
                            "last_updated": {
                                "type": "string",
                                "format": "datetime"
                            },
                            "internal_candidate_requirements": {
                                "type": "string"
                            },
                            "limitation_note": {
                                "type": "string"
                            },
                            "opportunity": {
                                "description": "Title of the opportunity",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique identifier",
                                "type": "number"
                            },
                            "candidates": {
                                "type": "string"
                            },
                            "colleges": {
                                "description": "Semi-colon separated list of college titles.",
                                "type": "string"
                            }
                        }
                    }
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/fundops"
                }
            }
        },
        "Award.Sponsor": {
            "description": "Sponsor funding a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "awardNumber": {
                    "description": "Award number used by the sponsor for reference (e.g. R01CA188269)",
                    "type": "string"
                },
                "administrativeContact": {
                    "type": "object",
                    "properties": {
                        "phone": {
                            "type": "string"
                        },
                        "fax": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "description": "Unique sponsor ID (e.g. 64000002)",
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/sponsor"
                },
                "mailingAddress": {
                    "description": "Primary mailing address for the Sponsor.",
                    "type": "object",
                    "properties": {
                        "address3": {
                            "type": "string"
                        },
                        "address1": {
                            "type": "string"
                        },
                        "address2": {
                            "type": "string"
                        }
                    }
                },
                "billingAddress": {
                    "type": "object",
                    "properties": {
                        "address3": {
                            "type": "string"
                        },
                        "address1": {
                            "type": "string"
                        },
                        "address4": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "address2": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "description": "Sponsor name (e.g. National Cancer Institute)",
                    "type": "string"
                },
                "technicalContact": {
                    "type": "object",
                    "properties": {
                        "phone": {
                            "type": "string"
                        },
                        "fax": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "College": {
            "description": "A distinct College in the University.",
            "x-endpoint": "College",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/college/{id}"
                },
                "title": {
                    "type": "string"
                },
                "proposals": {
                    "$ref": "#/definitions/ProposalCollection",
                    "x-meta-uri": "/college/{id}/proposals"
                },
                "projects": {
                    "$ref": "#/definitions/ProjectCollection",
                    "x-meta-uri": "/college/{id}/projects"
                },
                "departments": {
                    "$ref": "#/definitions/DepartmentCollection",
                    "x-meta-uri": "/college/{id}/departments"
                },
                "awards": {
                    "$ref": "#/definitions/AwardCollection",
                    "x-meta-uri": "/college/{id}/awards"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Project.ReportCollection": {
            "description": "A collection of Project.Report resources.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/project/{id}/reports"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project.Report"
                    }
                }
            }
        },
        "MetaCollection": {
            "description": "Meta attribute for a non-paginated collection of resources.",
            "properties": {
                "type": {
                    "description": "Type of resource described. This should simply be \"collection\".",
                    "type": "string"
                },
                "uri": {
                    "description": "Unique URI to this resource.",
                    "type": "string"
                },
                "total": {
                    "description": "Total items that exist within this collection.",
                    "type": "number"
                }
            }
        },
        "DepartmentCollection": {
            "description": "A collection of Department resources.",
            "x-endpoint": "Department",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/department"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Department"
                    }
                }
            }
        },
        "Project.Report": {
            "description": "A single report (milestone) on a specific Project.",
            "x-endpoint": "Project",
            "properties": {
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "comments": {
                    "type": "string"
                },
                "fromDate": {
                    "type": "string",
                    "format": "date"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date"
                },
                "toDate": {
                    "type": "string",
                    "format": "date"
                },
                "group": {
                    "description": "Reporting group (e.g. BG001)",
                    "type": "string"
                },
                "frequency": {
                    "description": "Report frequency code (e.g. ANNUAL)",
                    "type": "string"
                },
                "type": {
                    "description": "Report type code (e.g. TECH)",
                    "type": "string"
                },
                "responsiblePerson": {
                    "type": "string"
                }
            }
        },
        "Project.DepartmentCollection": {
            "description": "Departments that have an allocation \nto a particular Project.\n",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/project/{id}/departments"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single department with a Project allocation.",
                        "type": "object",
                        "properties": {
                            "department": {
                                "$ref": "#/definitions/Department"
                            },
                            "allocation": {
                                "description": "Percent allocation of Project funding.",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "Meta": {
            "description": "Meta attribute for a single resource.",
            "properties": {
                "type": {
                    "description": "Type of resource described. This should simply be \"resource\".",
                    "type": "string"
                },
                "uri": {
                    "description": "Unique URI to this resource.",
                    "type": "string"
                }
            }
        },
        "Proposal.DepartmentCollection": {
            "description": "Departments that have an allocation to a particular Proposal.",
            "x-endpoint": "Proposal",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/proposal/{id}/departments"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single department with a Proposal allocation.",
                        "type": "object",
                        "properties": {
                            "department": {
                                "$ref": "#/definitions/Department"
                            },
                            "allocation": {
                                "description": "Percent allocation of Proposal funding.",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "Person": {
            "description": "",
            "x-endpoint": "Person",
            "properties": {
                "certificates": {
                    "$ref": "#/definitions/Person.Certificates",
                    "x-meta-uri": "/person/{id}/certificates"
                },
                "college": {
                    "$ref": "#/definitions/College",
                    "x-meta-uri": "/college/{id}"
                },
                "department": {
                    "$ref": "#/definitions/Department",
                    "x-meta-uri": "/department/{id}"
                },
                "title": {
                    "description": "University job title (e.g. Sr Systems Developer/Engineer)",
                    "type": "string"
                },
                "resId": {
                    "description": "Unique ResID of the Person. Usually equivalent to OSUID, \nexcept for guest accounts.\n",
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "osuEmail": {
                    "description": "University-created email for the Person.",
                    "type": "string"
                },
                "proposals": {
                    "$ref": "#/definitions/ProposalCollection",
                    "x-meta-uri": "/person/{id}/proposals"
                },
                "username": {
                    "description": "Unique Name.N username within the University.",
                    "type": "string"
                },
                "osuId": {
                    "description": "University-created ID for the Person.",
                    "type": "string"
                },
                "prefix": {
                    "description": "Name prefix (e.g. Dr, Mr, Ms, Mrs)",
                    "type": "string"
                },
                "suffix": {
                    "description": "Name suffix (e.g. MD, CSP, etc)",
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "awards": {
                    "$ref": "#/definitions/AwardCollection",
                    "x-meta-uri": "/person/{id}/awards"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/person/{id}"
                },
                "lastName": {
                    "type": "string"
                },
                "projects": {
                    "$ref": "#/definitions/ProjectCollection",
                    "x-meta-uri": "/person/{id}/projects"
                },
                "preferredEmail": {
                    "description": "Preferred email the user set for themselves via the OR Register app. \nThis may differ from osuEmail.\n",
                    "type": "string"
                }
            }
        },
        "Award.InvestigatorCollection": {
            "description": "Investigators attached to an Award, with associated Effort",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/award/{id}/investigators"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single Person on an Award",
                        "type": "object",
                        "properties": {
                            "effort": {
                                "description": "Percent effort the Person spends on the Award Projects.",
                                "type": "number"
                            },
                            "role": {
                                "description": "Specific role assigned to the Person (PI|COPI)",
                                "type": "string"
                            },
                            "person": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    }
                }
            }
        },
        "Project.Information": {
            "description": "List of additional information codes \napplied to a specific Project. \n",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/information"
                },
                "information": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "description": "Code description (e.g. Fee Code S - Tuition \nand fees will be charged to the project.)\n",
                                "type": "string"
                            },
                            "type": {
                                "description": "Code type (e.g. Salary Cap)",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Award.Payments": {
            "description": "Payment data for a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/payments"
                },
                "billingFrequency": {
                    "description": "How often the Award is billed (e.g. 'Monthly End-of Month Cycle')",
                    "type": "string"
                },
                "totalPaidAmount": {
                    "description": "Summation of paid invoice amounts.",
                    "type": "number",
                    "format": "float"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "paidAmount": {
                                "type": "number",
                                "format": "float"
                            },
                            "userId": {
                                "type": "string"
                            },
                            "billedAmount": {
                                "type": "number",
                                "format": "float"
                            },
                            "invoiceDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "checks": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "origin": {
                                            "type": "string"
                                        },
                                        "checkNumber": {
                                            "type": "string"
                                        },
                                        "paymentMethod": {
                                            "type": "string"
                                        },
                                        "sequence": {
                                            "type": "number"
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "nameOnCheck": {
                                            "type": "string"
                                        },
                                        "depositId": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    }
                                }
                            },
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "status": {
                                "type": "string"
                            },
                            "invoice": {
                                "type": "string"
                            }
                        }
                    }
                },
                "totalBilledAmount": {
                    "description": "Summation of billed invoice amounts.",
                    "type": "number",
                    "format": "float"
                },
                "hasLetterOfCredit": {
                    "description": "Whether this Award has been funded by letter of credit (thus no payment data).",
                    "type": "boolean"
                }
            }
        },
        "Award.Information": {
            "description": "List of additional information codes applied to a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/information"
                },
                "information": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "description": "????",
                                "type": "string"
                            },
                            "type": {
                                "description": "???? - Two columns 'Detailed Information' in PiPortal",
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "description2": {
                                "description": "???? - Two columns 'Detailed Information' in PiPortal",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Project.Acl": {
            "description": "Project-specific ACL permissions set for an individual Person.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/acl/{person_id}"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "person": {
                    "$ref": "#/definitions/Person",
                    "x-meta-uri": "/person/{id}"
                }
            }
        },
        "Project.Sponsor": {
            "description": "Sponsor funding a specific Project.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/sponsor"
                },
                "name": {
                    "description": "Sponsor name (e.g. National Cancer Institute)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique sponsor ID (e.g. 64000002)",
                    "type": "string"
                }
            }
        },
        "Project.AclCollection": {
            "description": "Collection of ACLs for a Project.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/project/{id}/acl"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project.Acl"
                    }
                }
            }
        },
        "Project.Expenditures": {
            "description": "Expenditures within a specified period of the project's life.\nTotal costs and line items for each category will only summarize\ninformation between the specified startDate and endDate.  \nThis is a combination of both the PIPortal Expenditures and \nPersonnel sections.\n",
            "x-endpoint": "Project",
            "properties": {
                "thirdPartyCost": {
                    "description": "Line items for third party costs.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "accountDescription": {
                                "description": "Account category \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "voucher": {
                                "description": "Voucher number (e.g. 15YYP8TN)",
                                "type": "string"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "transaction": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            }
                        }
                    }
                },
                "totalSponsorCost": {
                    "description": "Total Sponsor cost for the reporting period.",
                    "type": "number",
                    "format": "float"
                },
                "totalCostShare": {
                    "description": "Total OSU Cost-Share for the reporting period.",
                    "type": "number",
                    "format": "float"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/expenditures"
                },
                "sponsorCost": {
                    "description": "Line items for Sponsor costs.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "vendor": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            },
                            "voucher": {
                                "description": "Voucher number (e.g. 15YYP8TN)",
                                "type": "string"
                            },
                            "account": {
                                "description": "Account description \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "startDate": {
                    "description": "Start date of the expenditures report.",
                    "type": "string",
                    "format": "date"
                },
                "totalThirdPartyCost": {
                    "description": "Total third party cost for the reporting period.",
                    "type": "number",
                    "format": "float"
                },
                "endDate": {
                    "description": "End date of the expenditures report.",
                    "type": "string",
                    "format": "date"
                },
                "costShare": {
                    "description": "Line items for OSU Cost-Share.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "accountDescription": {
                                "description": "Account category \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "voucher": {
                                "description": "Voucher number (e.g. 15YYP8TN)",
                                "type": "string"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "transaction": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            }
                        }
                    }
                },
                "personnel": {
                    "description": "Personnel expenditures within the reporting period, \nboth totals by personnel as well as line items for \neach reporting month.\n",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "costLineItems": {
                                "description": "Line item details of costs for the reporting period.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "description": "Specific cost description \n(e.g. Monthly Payroll, Unclassified Regular>=50%)\n",
                                            "type": "string"
                                        },
                                        "salary": {
                                            "description": "Salary cost of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "tuition": {
                                            "description": "Tuition cost of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "date": {
                                            "description": "Specific month the cost occurred.",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "benefits": {
                                            "description": "Benefits cost of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        }
                                    }
                                }
                            },
                            "title": {
                                "description": "Person's title (e.g. Research Specialist)",
                                "type": "string"
                            },
                            "totalBenefitsCost": {
                                "description": "Total benefits costs for the reporting period.",
                                "type": "number",
                                "format": "float"
                            },
                            "totalBenefitsCommitment": {
                                "type": "number",
                                "format": "float"
                            },
                            "totalTuitionCommitment": {
                                "type": "number",
                                "format": "float"
                            },
                            "totalTuitionCost": {
                                "description": "Total tuition costs for the reporting period.",
                                "type": "number",
                                "format": "float"
                            },
                            "totalSalaryCost": {
                                "description": "Total salary/wages costs for the reporting period.",
                                "type": "number",
                                "format": "float"
                            },
                            "commitmentLineItems": {
                                "description": "Line item details of commitments for the reporting period.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "description": "Specific commitment description \n(e.g. Payroll Commitment, Faculty Group Practice RCP10)\n",
                                            "type": "string"
                                        },
                                        "salary": {
                                            "description": "Salary commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "tuition": {
                                            "description": "Tuition commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "date": {
                                            "description": "Specific month the commitment occurred.",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "benefits": {
                                            "description": "Benefits commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        }
                                    }
                                }
                            },
                            "fte": {
                                "description": "The FTE of the person (for the Period? The project?)",
                                "type": "number",
                                "format": "float"
                            },
                            "person": {
                                "$ref": "#/definitions/Person"
                            },
                            "totalSalaryCommitment": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                }
            }
        },
        "ProjectCollection": {
            "description": "A collection of Projects.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/project"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                }
            }
        },
        "PersonCollection": {
            "description": "Collection of Person resources.",
            "x-endpoint": "Person",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/person"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Person"
                    }
                }
            }
        },
        "Project": {
            "description": "A distinct Project.",
            "x-endpoint": "Project",
            "properties": {
                "information": {
                    "$ref": "#/definitions/Project.Information",
                    "x-meta-uri": "/project/{id}/information"
                },
                "terms": {
                    "$ref": "#/definitions/Project.Terms",
                    "x-meta-uri": "/project/{id}/terms"
                },
                "title": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}"
                },
                "expenditures": {
                    "$ref": "#/definitions/Project.Expenditures",
                    "x-meta-uri": "/project/{id}/expenditures"
                },
                "proposal": {
                    "$ref": "#/definitions/Proposal",
                    "x-meta-uri": "/proposal/{id}"
                },
                "facilitiesAndAdminType": {
                    "description": "Facilities & Administrative fee type (e.g. MTDC)",
                    "type": "string"
                },
                "alerts": {
                    "$ref": "#/definitions/Project.AlertCollection",
                    "x-meta-uri": "/project/{id}/alerts"
                },
                "award": {
                    "$ref": "#/definitions/Award",
                    "x-meta-uri": "/award/{id}"
                },
                "departments": {
                    "$ref": "#/definitions/Project.DepartmentCollection",
                    "x-meta-uri": "/project/{id}/departments"
                },
                "facilitiesAndAdminRate": {
                    "description": "Facilities & Administrative fee rate (e.g. 10.00)",
                    "type": "string",
                    "format": "float"
                },
                "principalInvestigator": {
                    "$ref": "#/definitions/Person"
                },
                "spo": {
                    "$ref": "#/definitions/Person",
                    "x-meta-uri": "/person/{id}"
                },
                "reports": {
                    "$ref": "#/definitions/Project.Reports",
                    "x-meta-uri": "/project/{id}/reports"
                },
                "financials": {
                    "$ref": "#/definitions/Project.Financials",
                    "x-meta-uri": "/project/{id}/financials"
                },
                "colleges": {
                    "$ref": "#/definitions/CollegeCollection",
                    "x-meta-uri": "/project/{id}/colleges"
                },
                "id": {
                    "description": "Unique project number (e.g. 600012345).",
                    "type": "string"
                },
                "investigators": {
                    "$ref": "#/definitions/Project.InvestigatorCollection",
                    "x-meta-uri": "/project/{id}/investigators"
                },
                "startDate": {
                    "description": "Start date of the project period.",
                    "type": "string",
                    "format": "date"
                },
                "commitments": {
                    "$ref": "#/definitions/Project.Commitments",
                    "x-meta-uri": "/project/{id}/commitments"
                },
                "sponsor": {
                    "$ref": "#/definitions/Project.Sponsor",
                    "x-meta-uri": "/project/{id}/sponsor"
                },
                "endDate": {
                    "description": "End date of the project period. Note that this may not\nactually be a date (e.g. \"01/01/2015 Closed 02/10/2015 $16,000.00\")\n",
                    "type": "string"
                }
            }
        },
        "Award.History": {
            "description": "Audit history of Award amendments.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/history"
                },
                "amendments": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "amendment": {
                                "type": "number"
                            },
                            "code": {
                                "description": "Reason code (e.g. Additional Time)",
                                "type": "string"
                            },
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "reason": {
                                "description": "Reason for the amendment (e.g. PI Request)",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Proposal": {
            "description": "A distinct Proposal for a new project (or collection of projects).",
            "x-endpoint": "Proposal",
            "properties": {
                "spo": {
                    "$ref": "#/definitions/Person"
                },
                "departments": {
                    "$ref": "#/definitions/Proposal.DepartmentCollection",
                    "x-meta-uri": "/proposal/{id}/departments"
                },
                "title": {
                    "type": "string"
                },
                "principalInvestigator": {
                    "$ref": "#/definitions/Person"
                },
                "projects": {
                    "$ref": "#/definitions/ProjectCollection",
                    "x-meta-uri": "/proposal/{id}/projects"
                },
                "id": {
                    "description": "Unique GRT number (e.g. GRT00012345).",
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/proposal/{id}"
                },
                "investigators": {
                    "$ref": "#/definitions/Proposal.InvestigatorCollection",
                    "x-meta-uri": "/proposal/{id}/investigators"
                },
                "award": {
                    "$ref": "#/definitions/Award",
                    "x-meta-uri": "/award/{id}"
                },
                "startDate": {
                    "description": "Proposed start date of the Award period.",
                    "type": "string",
                    "format": "date"
                },
                "funding": {
                    "$ref": "#/definitions/Proposal.Funding",
                    "x-meta-uri": "/proposal/{id}/funding"
                },
                "endDate": {
                    "description": "Proposed end date of the Award period.",
                    "type": "string",
                    "format": "date"
                },
                "colleges": {
                    "$ref": "#/definitions/CollegeCollection",
                    "x-meta-uri": "/proposal/{id}/colleges"
                },
                "sponsor": {
                    "$ref": "#/definitions/Proposal.Sponsor",
                    "x-meta-uri": "/proposal/{id}/sponsor"
                }
            }
        },
        "AwardCollection": {
            "description": "A collection of Awards.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/award"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Award"
                    }
                }
            }
        },
        "Project.Terms": {
            "description": "List of terms applied to a specific Project.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/terms"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "description": "Human-readable version of the guide code \n(e.g. Budget restrictions apply)\n",
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "guide": {
                                "description": "Term guide code (e.g. BUDG)",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Fom.Projects": {
            "description": "Collection of projects.",
            "x-endpoint": "FOM",
            "properties": {
                "project": {
                    "type": "array",
                    "items": {
                        "description": "A thin definition of a single project.",
                        "type": "object",
                        "properties": {
                            "resid": {
                                "description": "ResID of the person matching the project.",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique project ID. (e.g. 60038536)",
                                "type": "string"
                            },
                            "title": {
                                "description": "Title of the project.",
                                "type": "string"
                            },
                            "namen": {
                                "description": "NameN of the person matching the project.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Legacy.UserTraining": {
            "description": "Collection of users with training data.",
            "x-endpoint": "Legacy",
            "properties": {
                "user": {
                    "type": "array",
                    "items": {
                        "description": "Training information for a single user.",
                        "type": "object",
                        "properties": {
                            "resid": {
                                "type": "string"
                            },
                            "certificate": {
                                "type": "array",
                                "items": {
                                    "description": "A single certificate or training status.",
                                    "type": "object",
                                    "properties": {
                                        "comments": {
                                            "description": "Additional comments attached to a certificate.",
                                            "type": "string"
                                        },
                                        "dateExpired": {
                                            "description": "mm/dd/YYYY of when the certificate expires, or null if not applicable.",
                                            "type": "string"
                                        },
                                        "dateReceived": {
                                            "description": "mm/dd/YYYY of when the certificate was received, or null if not applicable.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Status string for a certificate (e.g. Incomplete)",
                                            "type": "string"
                                        },
                                        "companies": {
                                            "description": "COI specific field. List of companies entered on a user's COI.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "name": {
                                            "description": "Longer type string (e.g. Conflict of Interest)",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "Type of certificate (e.g. COI, PIE, CITI)",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "namen": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Award.Attributes": {
            "description": "List of attribute codes applied to a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/attributes"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "description": "Human-readable version of the attribute code",
                                "type": "string"
                            },
                            "code": {
                                "description": "Attribute code (e.g. CFDA)",
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Fom.ProjectPis": {
            "description": "A collection of project PIs",
            "x-endpoint": "FOM",
            "properties": {
                "project": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "description": "Email address of the project's PI.",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique project ID. (e.g. 60038536)",
                                "type": "string"
                            },
                            "empid": {
                                "description": "Employee ID of the project's PI.",
                                "type": "string"
                            },
                            "name": {
                                "description": "PI name, formatted as Last Name, First Name",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Project.Financials": {
            "description": "Project financial line items broken down by group (sponsor, \ncost share, third party) and category (budget, expended, \ncommitments, balance), along with totals for each within a \nparticular reporting month. \n",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/financials"
                },
                "reportDate": {
                    "description": "The reporting month (As Of...) for budget details.\n",
                    "type": "string",
                    "format": "date"
                },
                "costShareBudget": {
                    "description": "...",
                    "type": "object",
                    "properties": {
                        "totalCommitment": {
                            "description": "Total (direct + F&A) commitments for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalBudget": {
                            "description": "Total (direct + F&A) budget for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "facilitiesAndAdmin": {
                            "description": "List of Facilities and Administrative \ncosts to OSU Cost-Share.\n",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "commitment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "lineItem": {
                                        "type": "string"
                                    },
                                    "expended": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                }
                            }
                        },
                        "totalBalance": {
                            "description": "Total (direct + F&A) balance for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalExpended": {
                            "description": "Total (direct + F&A) expended for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "direct": {
                            "description": "List of costs to OSU Cost-Share.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "commitment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "lineItem": {
                                        "type": "string"
                                    },
                                    "expended": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                }
                            }
                        }
                    }
                },
                "thirdPartyBudget": {
                    "description": "...",
                    "type": "object",
                    "properties": {
                        "totalBalance": {
                            "description": "Total (direct) balance for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalExpended": {
                            "description": "Total (direct) expended for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "direct": {
                            "description": "List of costs to third parties.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "commitment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "lineItem": {
                                        "type": "string"
                                    },
                                    "expended": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                }
                            }
                        },
                        "totalBudget": {
                            "description": "Total (direct) budget for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalCommitment": {
                            "description": "Total (direct) commitments for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        }
                    }
                },
                "sponsorBudget": {
                    "description": "...",
                    "type": "object",
                    "properties": {
                        "totalCommitment": {
                            "description": "Total (direct + F&A) commitments for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalBudget": {
                            "description": "Total (direct + F&A) budget for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "facilitiesAndAdmin": {
                            "description": "List of Facilities and Administrative \ncosts to the sponsor.\n",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "commitment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "lineItem": {
                                        "type": "string"
                                    },
                                    "expended": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                }
                            }
                        },
                        "totalBalance": {
                            "description": "Total (direct + F&A) balance for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "totalExpended": {
                            "description": "Total (direct + F&A) expended for the reporting month.\n",
                            "type": "number",
                            "format": "float"
                        },
                        "direct": {
                            "description": "List of direct costs to the sponsor.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "commitment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "lineItem": {
                                        "type": "string"
                                    },
                                    "expended": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Proposal.InvestigatorCollection": {
            "description": "Investigators attached to a Proposal, with a proposed role.",
            "x-endpoint": "Proposal",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/proposal/{id}/investigators"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single Person on a Proposal",
                        "type": "object",
                        "properties": {
                            "role": {
                                "description": "Specific role assigned to the Person (PI|COPI)",
                                "type": "string"
                            },
                            "person": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    }
                }
            }
        },
        "Test": {
            "description": "Just a definition to test documenting of various features.\nE.g. JSON schema attributes, Markdown, whatever.\n",
            "x-endpoint": "Test",
            "properties": {
                "arrayOfStrings": {
                    "description": "Testing an array of primitive strings",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/test"
                },
                "arrayOfRef": {
                    "description": "Testing an array of $ref",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Test"
                    }
                },
                "arrayOfObjects": {
                    "description": "Testing an array of objects",
                    "type": "array",
                    "items": {
                        "description": "Description of an object",
                        "type": "object",
                        "properties": {
                            "foo": {
                                "description": "Number of foos present",
                                "type": "number"
                            },
                            "bar": {
                                "description": "Description of bar",
                                "type": "string"
                            }
                        }
                    }
                },
                "arrayOfArrays": {
                    "description": "Testing an array of arrays",
                    "type": "array",
                    "items": {
                        "description": "A nested array of strings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Department": {
            "description": "A distinct Department in the University.",
            "x-endpoint": "Department",
            "properties": {
                "title": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/department/{id}"
                },
                "projects": {
                    "$ref": "#/definitions/ProjectCollection",
                    "x-meta-uri": "/department/{id}/projects"
                },
                "proposals": {
                    "$ref": "#/definitions/ProposalCollection",
                    "x-meta-uri": "/department/{id}/proposals"
                },
                "id": {
                    "type": "string"
                },
                "dnodeTitle": {
                    "description": "????",
                    "type": "string"
                },
                "investigators": {
                    "$ref": "#/definitions/PersonCollection",
                    "x-meta-uri": "/department/{id}/investigators"
                },
                "dnode": {
                    "description": "????",
                    "type": "string"
                },
                "awards": {
                    "$ref": "#/definitions/AwardCollection",
                    "x-meta-uri": "/department/{id}/awards"
                }
            }
        },
        "Project.Commitments": {
            "description": "...\n",
            "x-endpoint": "Project",
            "properties": {
                "sponsorCommitment": {
                    "description": "Line items for Sponsor commitments.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "account": {
                                "description": "Account description \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "vendor": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "thirdPartyCommitment": {
                    "description": "Line items for third party commitments.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "accountDescription": {
                                "description": "Account category \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "transaction": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            },
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/project/{id}/commitments"
                },
                "costShareCommitment": {
                    "description": "Line items for OSU Cost-Share commitments.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "accountDescription": {
                                "description": "Account category \n(e.g. SubContract-Portion Under $25K)\n",
                                "type": "string"
                            },
                            "journalEntry": {
                                "description": "PO/Journal number (e.g. RF01234567)",
                                "type": "string"
                            },
                            "transaction": {
                                "description": "Vendor/Transaction details \n(e.g. OFFICEMAX/RECYCLED CLIPBRD HRDBD-L)\n",
                                "type": "string"
                            },
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "totalSponsorCommitment": {
                    "description": "Total Sponsor commitment.",
                    "type": "number",
                    "format": "float"
                },
                "totalCostShareCommitment": {
                    "description": "Total OSU Cost-Share commitment.",
                    "type": "number",
                    "format": "float"
                },
                "totalThirdPartyCommitment": {
                    "description": "Total third party commitment.",
                    "type": "number",
                    "format": "float"
                },
                "personnel": {
                    "description": "Current personnel commitments, by person.\n",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "totalTuitionCommitment": {
                                "type": "number",
                                "format": "float"
                            },
                            "lineItems": {
                                "description": "Line item details of current commitments.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "description": "Specific commitment description \n(e.g. Payroll Commitment, Faculty Group Practice RCP10)\n",
                                            "type": "string"
                                        },
                                        "salary": {
                                            "description": "Salary commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "tuition": {
                                            "description": "Tuition commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "date": {
                                            "description": "Specific month the commitment occurred.",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "benefits": {
                                            "description": "Benefits commitment of this line item.",
                                            "type": "number",
                                            "format": "float"
                                        }
                                    }
                                }
                            },
                            "totalBenefitsCommitment": {
                                "type": "number",
                                "format": "float"
                            },
                            "fte": {
                                "description": "The FTE of the person allocated to the Project.",
                                "type": "number",
                                "format": "float"
                            },
                            "person": {
                                "$ref": "#/definitions/Person",
                                "x-meta-uri": "/person/{id}"
                            },
                            "totalSalaryCommitment": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                }
            }
        },
        "MetaPaginatedCollection": {
            "description": "Meta attribute for a paginated collection of resources.",
            "properties": {
                "uri": {
                    "description": "Unique URI to this page of a paginated collection.",
                    "type": "string"
                },
                "total": {
                    "description": "Total items that exist within this paginated collection.",
                    "type": "number"
                },
                "limit": {
                    "description": "Number of items displayed per-page.",
                    "type": "number"
                },
                "type": {
                    "description": "Type of resource described. This should simply be \"collection\".",
                    "type": "string"
                },
                "next": {
                    "description": "Unique URI to the next page in the collection.",
                    "type": "string"
                },
                "previous": {
                    "description": "Unique URI to the previous page in the collection.",
                    "type": "string"
                },
                "page": {
                    "description": "Zero-indexed page currently being accessed.",
                    "type": "number"
                }
            }
        },
        "Award.Funding": {
            "description": "Funding data for a specific Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}/funding"
                },
                "totalAwarded": {
                    "type": "number",
                    "format": "float"
                },
                "awarded": {
                    "description": "Line items for periodic Award funding.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "description": "Sponsor reference number (e.g. R01CA188269-03)",
                                "type": "string"
                            },
                            "reportedDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "period": {
                                "type": "number"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "totalAnticipated": {
                    "type": "number",
                    "format": "float"
                },
                "anticipated": {
                    "description": "Line items for anticipated future funding.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "description": "Sponsor reference number (e.g. R01CA188269-04)",
                                "type": "string"
                            },
                            "period": {
                                "type": "number"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                }
            }
        },
        "Award": {
            "description": "A distinct Award from a Sponsor.",
            "x-endpoint": "Award",
            "properties": {
                "information": {
                    "$ref": "#/definitions/Award.Information",
                    "x-meta-uri": "/award/{id}/information"
                },
                "title": {
                    "type": "string"
                },
                "projects": {
                    "$ref": "#/definitions/ProjectCollection",
                    "x-meta-uri": "/award/{id}/projects"
                },
                "history": {
                    "$ref": "#/definitions/Award.History",
                    "x-meta-uri": "/award/{id}/history"
                },
                "endDate": {
                    "description": "End of the Award period.",
                    "type": "string",
                    "format": "date"
                },
                "funding": {
                    "$ref": "#/definitions/Award.Funding",
                    "x-meta-uri": "/award/{id}/funding"
                },
                "departments": {
                    "$ref": "#/definitions/Award.DepartmentCollection",
                    "x-meta-uri": "/award/{id}/departments"
                },
                "payments": {
                    "$ref": "#/definitions/Award.Payments",
                    "x-meta-uri": "/award/{id}/payments"
                },
                "colleges": {
                    "$ref": "#/definitions/CollegeCollection",
                    "x-meta-uri": "/award/{id}/colleges"
                },
                "principalInvestigator": {
                    "$ref": "#/definitions/Person"
                },
                "spo": {
                    "$ref": "#/definitions/Person"
                },
                "milestones": {
                    "$ref": "#/definitions/Award.Milestones",
                    "x-meta-uri": "/award/{id}/milestones"
                },
                "type": {
                    "description": "Award type code (e.g. COST REIMBURS).",
                    "type": "string"
                },
                "id": {
                    "description": "Unique GRT number (e.g. GRT00012345).",
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/award/{id}"
                },
                "investigators": {
                    "$ref": "#/definitions/Award.InvestigatorCollection",
                    "x-meta-uri": "/award/{id}/investigators"
                },
                "attributes": {
                    "$ref": "#/definitions/Award.Attributes",
                    "x-meta-uri": "/award/{id}/attributes"
                },
                "startDate": {
                    "description": "Start of the Award period.",
                    "type": "string",
                    "format": "date"
                },
                "sponsor": {
                    "$ref": "#/definitions/Award.Sponsor",
                    "x-meta-uri": "/award/{id}/sponsor"
                },
                "terms": {
                    "$ref": "#/definitions/Award.Terms",
                    "x-meta-uri": "/award/{id}/terms"
                }
            }
        },
        "Award.DepartmentCollection": {
            "description": "Departments that have an allocation to a particular Award.",
            "x-endpoint": "Award",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/award/{id}/departments"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single department with an Award allocation.",
                        "type": "object",
                        "properties": {
                            "department": {
                                "$ref": "#/definitions/Department"
                            },
                            "allocation": {
                                "description": "Percent allocation of Award funding.",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "Project.InvestigatorCollection": {
            "description": "Investigators attached to a Project.",
            "x-endpoint": "Project",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/project/{id}/investigators"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "description": "A single Person on a Project",
                        "type": "object",
                        "properties": {
                            "role": {
                                "description": "Specific role assigned to the Person (PI|COPI)",
                                "type": "string"
                            },
                            "person": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    }
                }
            }
        },
        "Person.Certificates": {
            "description": "A list of certificates/training for an individual.",
            "x-endpoint": "Person",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/person/{id}/certificates"
                },
                "citi": {
                    "description": "CITI training status.",
                    "type": "object",
                    "properties": {
                        "dateExpired": {
                            "description": "mm/dd/YYYY of when CITI training expires.",
                            "type": "string",
                            "format": "date"
                        },
                        "dateReceived": {
                            "description": "mm/dd/YYYY of when CITI training was recorded.",
                            "type": "string",
                            "format": "date"
                        }
                    }
                },
                "pie": {
                    "description": "PI-Eligibility certification.",
                    "type": "object",
                    "properties": {
                        "dateReceived": {
                            "description": "mm/dd/YYYY of when this Person became PI-eligible.",
                            "type": "string",
                            "format": "date"
                        }
                    }
                },
                "coi": {
                    "description": "Most recent Conflict of Interest submission results.",
                    "type": "object",
                    "properties": {
                        "companies": {
                            "description": "List of companies entered on a Person's COI submission.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "comments": {
                            "description": "Additional comments attached to the COI.",
                            "type": "string"
                        },
                        "dateExpired": {
                            "description": "mm/dd/YYYY of when the current COI expires.",
                            "type": "string",
                            "format": "date"
                        },
                        "dateReceived": {
                            "description": "mm/dd/YYYY of when the COI was last submitted.",
                            "type": "string",
                            "format": "date"
                        },
                        "status": {
                            "description": "Current status of the COI submission (e.g. Incomplete)",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ProposalCollection": {
            "description": "A collection of Proposals.",
            "x-endpoint": "Proposal",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/MetaCollection",
                    "x-meta-uri": "/proposal"
                },
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Proposal"
                    }
                }
            }
        },
        "Fom.Departments": {
            "description": "A collection of department entries.",
            "x-endpoint": "FOM",
            "properties": {
                "department": {
                    "type": "array",
                    "items": {
                        "description": "A thin representation of a department.",
                        "type": "object",
                        "properties": {
                            "dnode": {
                                "description": "????",
                                "type": "string"
                            },
                            "id": {
                                "description": "Unique department ID",
                                "type": "string"
                            },
                            "title": {
                                "description": "Department title",
                                "type": "string"
                            },
                            "dnode_title": {
                                "description": "????",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Proposal.Funding": {
            "description": "Funding data for a specific Proposal.",
            "x-endpoint": "Proposal",
            "properties": {
                "requestedBudget": {
                    "description": "Amount requested to fund this Proposal.",
                    "type": "number",
                    "format": "float"
                },
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/proposal/{id}/funding"
                }
            }
        },
        "Proposal.Sponsor": {
            "description": "Sponsor targetted to fund a specific Proposal.",
            "x-endpoint": "Proposal",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/Meta",
                    "x-meta-uri": "/proposal/{id}/sponsor"
                },
                "name": {
                    "description": "Sponsor name (e.g. National Cancer Institute)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique sponsor ID (e.g. 64000002)",
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "properties": {
                "responseCode": {
                    "type": "integer",
                    "format": "int32",
                    "example": 400
                },
                "developerMessage": {
                    "description": "An error string oriented toward helping developers debug consumer code.",
                    "type": "string",
                    "example": "Requested resource identifier (ResID) does not exist."
                },
                "message": {
                    "description": "A user friendly error message that could potentially be reflected back in an application.",
                    "type": "string",
                    "example": "Person not found"
                }
            },
            "required": [
                "responseCode",
                "message",
                "developerMessage"
            ]
        }
    }
}